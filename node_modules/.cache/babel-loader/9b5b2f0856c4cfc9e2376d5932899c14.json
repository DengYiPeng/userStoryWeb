{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp2;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { func } from '../../util';\nimport Uploader from './uploader';\nimport Selecter from './selecter';\nvar Html5Uploader = (_temp2 = _class = function (_Component) {\n  _inherits(Html5Uploader, _Component);\n\n  function Html5Uploader() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Html5Uploader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.getUploadOptions = function (props) {\n      return {\n        action: props.action,\n        name: props.name,\n        timeout: props.timeout,\n        method: props.method,\n        beforeUpload: props.beforeUpload,\n        onProgress: props.onProgress,\n        onSuccess: props.onSuccess,\n        onError: props.onError,\n        withCredentials: props.withCredentials,\n        headers: props.headers,\n        data: props.data\n      };\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Html5Uploader.prototype.componentDidMount = function componentDidMount() {\n    var props = this.props;\n    var options = this.getUploadOptions(props);\n    this.uploader = new Uploader(options);\n  };\n\n  Html5Uploader.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var options = this.getUploadOptions(nextProps);\n    this.uploader.setOptions(options);\n  };\n\n  Html5Uploader.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.abort();\n  };\n\n  Html5Uploader.prototype.abort = function abort(file) {\n    this.uploader.abort(file);\n  };\n\n  Html5Uploader.prototype.startUpload = function startUpload(fileList) {\n    this.uploader.startUpload(fileList);\n  };\n\n  Html5Uploader.prototype.render = function render() {\n    var _props = this.props,\n        accept = _props.accept,\n        multiple = _props.multiple,\n        children = _props.children,\n        id = _props.id,\n        disabled = _props.disabled,\n        dragable = _props.dragable,\n        style = _props.style,\n        className = _props.className,\n        onSelect = _props.onSelect,\n        onDragOver = _props.onDragOver,\n        onDragLeave = _props.onDragLeave,\n        onDrop = _props.onDrop,\n        name = _props.name;\n    return React.createElement(Selecter, {\n      id: id,\n      accept: accept,\n      multiple: multiple,\n      dragable: dragable,\n      disabled: disabled,\n      className: className,\n      style: style,\n      onSelect: onSelect,\n      onDragOver: onDragOver,\n      onDragLeave: onDragLeave,\n      onDrop: onDrop,\n      name: name\n    }, children);\n  };\n\n  return Html5Uploader;\n}(Component), _class.propTypes = _extends({}, Selecter.propTypes, {\n  /**\n   * 上传的地址\n   */\n  action: PropTypes.string,\n\n  /**\n   * 接受上传的文件类型 (image/png, image/jpg, .doc, .ppt) 详见 [input accept attribute](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-accept)\n   */\n  accept: PropTypes.string,\n\n  /**\n   * 上传额外传参\n   */\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * 设置上传的请求头部\n   */\n  headers: PropTypes.object,\n\n  /**\n   * 是否允许请求携带 cookie\n   */\n  withCredentials: PropTypes.bool,\n\n  /**\n   * 上传文件之前\n   * @param {Object} file 文件对象\n   * @return {Boolean} `false` 停止上传\n   */\n  beforeUpload: PropTypes.func,\n\n  /**\n   * 正在上传文件的钩子，参数为上传的事件以及文件\n   */\n  onProgress: PropTypes.func,\n\n  /**\n   * 上传成功回调函数，参数为请求下响应信息以及文件\n   */\n  onSuccess: PropTypes.func,\n\n  /**\n   * 上传失败回调函数，参数为上传失败的信息、响应信息以及文件\n   */\n  onError: PropTypes.func,\n  children: PropTypes.node,\n\n  /**\n   * 上传超时,单位ms\n   */\n  timeout: PropTypes.number,\n\n  /**\n   * 上传方法\n   */\n  method: PropTypes.oneOf(['post', 'put'])\n}), _class.defaultProps = _extends({}, Selecter.defaultProps, {\n  name: 'file',\n  multiple: false,\n  withCredentials: true,\n  beforeUpload: func.noop,\n  onSelect: func.noop,\n  onDragOver: func.noop,\n  onDragLeave: func.noop,\n  onDrop: func.noop,\n  onProgress: func.noop,\n  onSuccess: func.noop,\n  onError: func.noop,\n  onAbort: func.noop,\n  method: 'post'\n}), _temp2);\nHtml5Uploader.displayName = 'Html5Uploader';\nexport { Html5Uploader as default };","map":null,"metadata":{},"sourceType":"module"}