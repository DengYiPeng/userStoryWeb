{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Checkbox from '../../checkbox';\nimport Radio from '../../radio';\nimport { func, obj, KEYCODE } from '../../util';\nimport Item from './item';\nvar noop = {};\nvar bindCtx = func.bindCtx;\nvar pickOthers = obj.pickOthers;\nvar CheckableItem = (_temp = _class = function (_Component) {\n  _inherits(CheckableItem, _Component);\n\n  function CheckableItem(props) {\n    _classCallCheck(this, CheckableItem);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    bindCtx(_this, ['stopPropagation', 'handleKeyDown', 'handleClick']);\n    return _this;\n  }\n\n  CheckableItem.prototype.stopPropagation = function stopPropagation(e) {\n    e.stopPropagation();\n  };\n\n  CheckableItem.prototype.handleCheck = function handleCheck(e) {\n    var _props = this.props,\n        checkType = _props.checkType,\n        checked = _props.checked,\n        onChange = _props.onChange;\n\n    if (!(checkType === 'radio' && checked)) {\n      onChange(!checked, e);\n    }\n  };\n\n  CheckableItem.prototype.handleKeyDown = function handleKeyDown(e) {\n    if (e.keyCode === KEYCODE.SPACE && !this.props.checkDisabled) {\n      this.handleCheck(e);\n    }\n\n    this.props.onKeyDown && this.props.onKeyDown(e);\n  };\n\n  CheckableItem.prototype.handleClick = function handleClick(e) {\n    this.handleCheck(e);\n    this.props.onClick && this.props.onClick(e);\n  };\n\n  CheckableItem.prototype.renderCheck = function renderCheck() {\n    var _props2 = this.props,\n        root = _props2.root,\n        checked = _props2.checked,\n        indeterminate = _props2.indeterminate,\n        disabled = _props2.disabled,\n        checkType = _props2.checkType,\n        checkDisabled = _props2.checkDisabled,\n        onChange = _props2.onChange;\n    var labelToggleChecked = root.props.labelToggleChecked;\n    var Check = checkType === 'radio' ? Radio : Checkbox;\n    var checkProps = {\n      tabIndex: '-1',\n      checked: checked,\n      disabled: disabled || checkDisabled\n    };\n\n    if (checkType === 'checkbox') {\n      checkProps.indeterminate = indeterminate;\n    }\n\n    if (!labelToggleChecked) {\n      checkProps.onChange = onChange;\n      checkProps.onClick = this.stopPropagation;\n    }\n\n    return React.createElement(Check, checkProps);\n  };\n\n  CheckableItem.prototype.render = function render() {\n    var _props3 = this.props,\n        _key = _props3._key,\n        root = _props3.root,\n        checked = _props3.checked,\n        disabled = _props3.disabled,\n        onClick = _props3.onClick,\n        helper = _props3.helper,\n        children = _props3.children;\n    var _root$props = root.props,\n        prefix = _root$props.prefix,\n        labelToggleChecked = _root$props.labelToggleChecked;\n    var others = pickOthers(Object.keys(CheckableItem.propTypes), this.props);\n\n    var newProps = _extends({\n      _key: _key,\n      root: root,\n      disabled: disabled,\n      type: 'item',\n      onClick: onClick,\n      onKeyDown: this.handleKeyDown\n    }, others);\n\n    if (labelToggleChecked && !disabled) {\n      newProps.onClick = this.handleClick;\n    }\n\n    return React.createElement(Item, _extends({\n      'aria-checked': checked\n    }, newProps), this.renderCheck(), React.createElement('span', {\n      className: prefix + 'menu-item-text'\n    }, children), helper ? React.createElement('div', {\n      className: prefix + 'menu-item-helper'\n    }, helper) : null);\n  };\n\n  return CheckableItem;\n}(Component), _class.propTypes = {\n  _key: PropTypes.string,\n  root: PropTypes.object,\n  disabled: PropTypes.bool,\n  inlineIndent: PropTypes.number,\n  checked: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  onChange: PropTypes.func,\n  checkType: PropTypes.oneOf(['checkbox', 'radio']),\n  checkDisabled: PropTypes.bool,\n  helper: PropTypes.node,\n  children: PropTypes.node,\n  onKeyDown: PropTypes.func,\n  onClick: PropTypes.func\n}, _class.defaultProps = {\n  disabled: false,\n  checked: false,\n  indeterminate: false,\n  checkType: 'checkbox',\n  checkDisabled: false,\n  onChange: noop\n}, _temp);\nCheckableItem.displayName = 'CheckableItem';\nexport { CheckableItem as default };","map":null,"metadata":{},"sourceType":"module"}