{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/wanghui/user_story/userStoryWeb/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/wanghui/user_story/userStoryWeb/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/wanghui/user_story/userStoryWeb/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/wanghui/user_story/userStoryWeb/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/wanghui/user_story/userStoryWeb/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _assertThisInitialized = require(\"/Users/wanghui/user_story/userStoryWeb/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _redux = require(\"redux\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _Container = _interopRequireDefault(require(\"../dnd/Container\"));\n\nvar _Draggable = _interopRequireDefault(require(\"../dnd/Draggable\"));\n\nvar _v = _interopRequireDefault(require(\"uuid/v1\"));\n\nvar _Loader = _interopRequireDefault(require(\"./Loader\"));\n\nvar _Card = _interopRequireDefault(require(\"./Card\"));\n\nvar _NewCard = _interopRequireDefault(require(\"./NewCard\"));\n\nvar _Base = require(\"../styles/Base\");\n\nvar laneActions = _interopRequireWildcard(require(\"../actions/LaneActions\"));\n\nvar _Elements = require(\"../styles/Elements\");\n\nvar Lane =\n/*#__PURE__*/\nfunction (_react$Component) {\n  _inherits(Lane, _react$Component);\n\n  function Lane() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Lane);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Lane)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      loading: false,\n      currentPage: _this.props.currentPage,\n      addCardMode: false,\n      collapsed: false,\n      isDraggingOver: false\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"handleScroll\", function (evt) {\n      var node = evt.target;\n      var elemScrolPosition = node.scrollHeight - node.scrollTop - node.clientHeight;\n      var onLaneScroll = _this.props.onLaneScroll;\n\n      if (elemScrolPosition <= 0 && onLaneScroll && !_this.state.loading) {\n        var currentPage = _this.state.currentPage;\n\n        _this.setState({\n          loading: true\n        });\n\n        var nextPage = currentPage + 1;\n        onLaneScroll(nextPage, _this.props.id).then(function (moreCards) {\n          if (!moreCards || moreCards.length === 0) {\n            // if no cards present, stop retrying until user action\n            node.scrollTop = node.scrollTop - 100;\n          } else {\n            _this.props.actions.paginateLane({\n              laneId: _this.props.id,\n              newCards: moreCards,\n              nextPage: nextPage\n            });\n          }\n\n          _this.setState({\n            loading: false\n          });\n        });\n      }\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"laneDidMount\", function (node) {\n      if (node) {\n        node.addEventListener('scroll', _this.handleScroll);\n      }\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"removeCard\", function (laneId, cardId) {\n      _this.props.actions.removeCard({\n        laneId: laneId,\n        cardId: cardId\n      });\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"handleCardClick\", function (e, card) {\n      var onCardClick = _this.props.onCardClick;\n      onCardClick && onCardClick(card.id, card.metadata, card.laneId);\n      e.stopPropagation();\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"showEditableCard\", function () {\n      _this.setState({\n        addCardMode: true\n      });\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"hideEditableCard\", function () {\n      _this.setState({\n        addCardMode: false\n      });\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"addNewCard\", function (params) {\n      var laneId = _this.props.id;\n      var id = (0, _v.default)();\n\n      _this.hideEditableCard();\n\n      var card = (0, _objectSpread2.default)({\n        id: id\n      }, params);\n\n      _this.props.actions.addCard({\n        laneId: laneId,\n        card: card\n      });\n\n      _this.props.onCardAdd(card, laneId);\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"renderAddCardLink\", function () {\n      var _this$props = _this.props,\n          addCardLink = _this$props.addCardLink,\n          addCardTitle = _this$props.addCardTitle;\n\n      if (addCardLink) {\n        return _react.default.createElement(\"span\", {\n          onClick: _this.showEditableCard\n        }, addCardLink);\n      } else {\n        return _react.default.createElement(_Base.AddCardLink, {\n          onClick: _this.showEditableCard\n        }, addCardTitle);\n      }\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"renderNewCard\", function () {\n      var _this$props2 = _this.props,\n          newCardTemplate = _this$props2.newCardTemplate,\n          id = _this$props2.id;\n\n      if (newCardTemplate) {\n        var newCardWithProps = _react.default.cloneElement(newCardTemplate, {\n          onCancel: _this.hideEditableCard,\n          onAdd: _this.addNewCard,\n          laneId: id\n        });\n\n        return _react.default.createElement(\"span\", null, newCardWithProps);\n      } else {\n        return _react.default.createElement(_NewCard.default, {\n          onCancel: _this.hideEditableCard,\n          onAdd: _this.addNewCard\n        });\n      }\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"onDragStart\", function (_ref) {\n      var payload = _ref.payload;\n      var handleDragStart = _this.props.handleDragStart;\n      handleDragStart && handleDragStart(payload.id, payload.laneId);\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"shouldAcceptDrop\", function (sourceContainerOptions) {\n      return _this.props.droppable && sourceContainerOptions.groupName === _this.groupName;\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"onDragEnd\", function (laneId, result) {\n      var handleDragEnd = _this.props.handleDragEnd;\n      var addedIndex = result.addedIndex,\n          payload = result.payload;\n\n      if (addedIndex != null) {\n        _this.props.actions.moveCardAcrossLanes({\n          fromLaneId: payload.laneId,\n          toLaneId: laneId,\n          cardId: payload.id,\n          index: addedIndex\n        });\n\n        handleDragEnd && handleDragEnd(payload.id, payload.laneId, laneId, addedIndex, payload);\n      }\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"renderDragContainer\", function (isDraggingOver) {\n      var _this$props3 = _this.props,\n          laneSortFunction = _this$props3.laneSortFunction,\n          editable = _this$props3.editable,\n          hideCardDeleteIcon = _this$props3.hideCardDeleteIcon,\n          tagStyle = _this$props3.tagStyle,\n          cardStyle = _this$props3.cardStyle,\n          draggable = _this$props3.draggable,\n          cardDraggable = _this$props3.cardDraggable,\n          cards = _this$props3.cards,\n          cardDragClass = _this$props3.cardDragClass,\n          id = _this$props3.id;\n      var _this$state = _this.state,\n          addCardMode = _this$state.addCardMode,\n          collapsed = _this$state.collapsed;\n      var showableCards = collapsed ? [] : cards;\n\n      var cardList = _this.sortCards(showableCards, laneSortFunction).map(function (card, idx) {\n        var cardToRender = _react.default.createElement(_Card.default, (0, _extends2.default)({\n          key: card.id,\n          index: idx,\n          customCardLayout: _this.props.customCardLayout,\n          customCard: _this.props.children,\n          tagStyle: tagStyle,\n          cardStyle: cardStyle,\n          removeCard: _this.removeCard,\n          onClick: function onClick(e) {\n            return _this.handleCardClick(e, card);\n          },\n          onDelete: _this.props.onCardDelete,\n          editable: editable,\n          hideCardDeleteIcon: hideCardDeleteIcon\n        }, card));\n\n        return draggable && cardDraggable ? _react.default.createElement(_Draggable.default, {\n          key: card.id\n        }, cardToRender) : _react.default.createElement(\"span\", {\n          key: card.id\n        }, cardToRender);\n      });\n\n      return _react.default.createElement(_Base.ScrollableLane, {\n        innerRef: _this.laneDidMount,\n        isDraggingOver: isDraggingOver\n      }, _react.default.createElement(_Container.default, {\n        orientation: \"vertical\",\n        groupName: _this.groupName,\n        dragClass: cardDragClass,\n        onDragStart: _this.onDragStart,\n        onDrop: function onDrop(e) {\n          return _this.onDragEnd(id, e);\n        },\n        onDragEnter: function onDragEnter() {\n          return _this.setState({\n            isDraggingOver: true\n          });\n        },\n        onDragLeave: function onDragLeave() {\n          return _this.setState({\n            isDraggingOver: false\n          });\n        },\n        shouldAcceptDrop: _this.shouldAcceptDrop,\n        getChildPayload: function getChildPayload(index) {\n          return _this.props.getCardDetails(id, index);\n        }\n      }, cardList), editable && !addCardMode && _this.renderAddCardLink(), addCardMode && _this.renderNewCard());\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"renderHeader\", function () {\n      var customLaneHeader = _this.props.customLaneHeader;\n\n      if (customLaneHeader) {\n        var customLaneElement = _react.default.cloneElement(customLaneHeader, (0, _objectSpread2.default)({}, _this.props));\n\n        return _react.default.createElement(\"span\", null, customLaneElement);\n      } else {\n        var _this$props4 = _this.props,\n            title = _this$props4.title,\n            label = _this$props4.label,\n            titleStyle = _this$props4.titleStyle,\n            labelStyle = _this$props4.labelStyle;\n        return _react.default.createElement(_Base.LaneHeader, {\n          onDoubleClick: _this.toggleLaneCollapsed\n        }, _react.default.createElement(_Base.Title, {\n          style: titleStyle\n        }, title), label && _react.default.createElement(_Base.RightContent, null, _react.default.createElement(\"span\", {\n          style: labelStyle\n        }, label)));\n      }\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"renderFooter\", function () {\n      var _this$props5 = _this.props,\n          collapsibleLanes = _this$props5.collapsibleLanes,\n          cards = _this$props5.cards;\n      var collapsed = _this.state.collapsed;\n\n      if (collapsibleLanes && cards.length > 0) {\n        return _react.default.createElement(_Base.LaneFooter, {\n          onClick: _this.toggleLaneCollapsed\n        }, collapsed ? _react.default.createElement(_Elements.ExpandBtn, null) : _react.default.createElement(_Elements.CollapseBtn, null));\n      }\n    });\n    (0, _defineProperty2.default)(_assertThisInitialized(_assertThisInitialized(_this)), \"toggleLaneCollapsed\", function () {\n      _this.props.collapsibleLanes && _this.setState(function (state) {\n        return {\n          collapsed: !state.collapsed\n        };\n      });\n    });\n    return _this;\n  }\n\n  _createClass(Lane, [{\n    key: \"sortCards\",\n    value: function sortCards(cards, sortFunction) {\n      if (!cards) return [];\n      if (!sortFunction) return cards;\n      return cards.concat().sort(function (card1, card2) {\n        return sortFunction(card1, card2);\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (!(0, _isEqual.default)(this.props.cards, nextProps.cards)) {\n        this.setState({\n          currentPage: nextProps.currentPage\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          loading = _this$state2.loading,\n          isDraggingOver = _this$state2.isDraggingOver;\n      var _this$props6 = this.props,\n          id = _this$props6.id,\n          onLaneClick = _this$props6.onLaneClick,\n          otherProps = (0, _objectWithoutProperties2.default)(_this$props6, [\"id\", \"onLaneClick\"]);\n      return _react.default.createElement(_Base.Section, (0, _extends2.default)({}, otherProps, {\n        key: id,\n        onClick: function onClick() {\n          return onLaneClick && onLaneClick(id);\n        },\n        draggable: false,\n        className: \"react-trello-lane\"\n      }), this.renderHeader(), this.renderDragContainer(isDraggingOver), loading && _react.default.createElement(_Loader.default, null), this.renderFooter());\n    }\n  }, {\n    key: \"groupName\",\n    get: function get() {\n      var boardId = this.props.boardId;\n      return \"TrelloBoard\".concat(boardId, \"Lane\");\n    }\n  }]);\n\n  return Lane;\n}(_react.Component);\n\nLane.propTypes = {\n  actions: _propTypes.default.object,\n  children: _propTypes.default.node,\n  id: _propTypes.default.string.isRequired,\n  boardId: _propTypes.default.string,\n  title: _propTypes.default.node,\n  index: _propTypes.default.number,\n  laneSortFunction: _propTypes.default.func,\n  style: _propTypes.default.object,\n  cardStyle: _propTypes.default.object,\n  tagStyle: _propTypes.default.object,\n  titleStyle: _propTypes.default.object,\n  labelStyle: _propTypes.default.object,\n  customLaneHeader: _propTypes.default.element,\n  customCardLayout: _propTypes.default.bool,\n  cards: _propTypes.default.array,\n  label: _propTypes.default.string,\n  currentPage: _propTypes.default.number,\n  draggable: _propTypes.default.bool,\n  collapsibleLanes: _propTypes.default.bool,\n  droppable: _propTypes.default.bool,\n  onLaneScroll: _propTypes.default.func,\n  onCardClick: _propTypes.default.func,\n  onCardDelete: _propTypes.default.func,\n  onCardAdd: _propTypes.default.func,\n  onLaneClick: _propTypes.default.func,\n  newCardTemplate: _propTypes.default.node,\n  addCardLink: _propTypes.default.node,\n  addCardTitle: _propTypes.default.string,\n  editable: _propTypes.default.bool,\n  cardDraggable: _propTypes.default.bool,\n  cardDragClass: _propTypes.default.string\n};\nLane.defaultProps = {\n  style: {},\n  titleStyle: {},\n  labelStyle: {},\n  label: undefined,\n  editable: false,\n  onCardAdd: function onCardAdd() {}\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: (0, _redux.bindActionCreators)(laneActions, dispatch)\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(null, mapDispatchToProps)(Lane);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}