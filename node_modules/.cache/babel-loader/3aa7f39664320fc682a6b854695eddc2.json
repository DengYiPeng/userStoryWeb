{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ConfigProvider from '../config-provider';\n/**\n * Input.Group\n */\n\nvar Group = (_temp = _class = function (_React$Component) {\n  _inherits(Group, _React$Component);\n\n  function Group() {\n    _classCallCheck(this, Group);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Group.prototype.render = function render() {\n    var _classNames, _classNames2, _classNames3;\n\n    var _props = this.props,\n        className = _props.className,\n        style = _props.style,\n        children = _props.children,\n        prefix = _props.prefix,\n        addonBefore = _props.addonBefore,\n        addonAfter = _props.addonAfter,\n        addonBeforeClassName = _props.addonBeforeClassName,\n        addonAfterClassName = _props.addonAfterClassName,\n        rtl = _props.rtl,\n        others = _objectWithoutProperties(_props, ['className', 'style', 'children', 'prefix', 'addonBefore', 'addonAfter', 'addonBeforeClassName', 'addonAfterClassName', 'rtl']);\n\n    var cls = classNames((_classNames = {}, _classNames[prefix + 'input-group'] = true, _classNames[className] = !!className, _classNames));\n    var addonCls = prefix + 'input-group-addon';\n    var beforeCls = classNames(addonCls, (_classNames2 = {}, _classNames2[prefix + 'before'] = true, _classNames2[addonBeforeClassName] = addonBeforeClassName, _classNames2));\n    var afterCls = classNames(addonCls, (_classNames3 = {}, _classNames3[prefix + 'after'] = true, _classNames3[addonAfterClassName] = addonAfterClassName, _classNames3));\n    var before = addonBefore ? React.createElement('span', {\n      className: beforeCls\n    }, addonBefore) : null;\n    var after = addonAfter ? React.createElement('span', {\n      className: afterCls\n    }, addonAfter) : null;\n    return React.createElement('span', _extends({}, others, {\n      dir: rtl ? 'rtl' : undefined,\n      className: cls,\n      style: style\n    }), before, children, after);\n  };\n\n  return Group;\n}(React.Component), _class.propTypes = {\n  /**\n   * 样式前缀\n   */\n  prefix: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.node,\n\n  /**\n   * 输入框前附加内容\n   */\n  addonBefore: PropTypes.node,\n\n  /**\n   * 输入框前附加内容css\n   */\n  addonBeforeClassName: PropTypes.string,\n\n  /**\n   * 输入框后附加内容\n   */\n  addonAfter: PropTypes.node,\n\n  /**\n   * 输入框后额外css\n   */\n  addonAfterClassName: PropTypes.string,\n\n  /**\n   * rtl\n   */\n  rtl: PropTypes.bool\n}, _class.defaultProps = {\n  prefix: 'next-'\n}, _temp);\nGroup.displayName = 'Group';\nexport default ConfigProvider.config(Group);","map":null,"metadata":{},"sourceType":"module"}