{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Input from '../../input';\nvar TreeNodeInput = (_temp = _class = function (_Component) {\n  _inherits(TreeNodeInput, _Component);\n\n  function TreeNodeInput() {\n    _classCallCheck(this, TreeNodeInput);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  TreeNodeInput.prototype.componentDidMount = function componentDidMount() {\n    var inputWrapperNode = findDOMNode(this);\n    inputWrapperNode.querySelector('input').focus();\n  };\n\n  TreeNodeInput.prototype.render = function render() {\n    var _props = this.props,\n        prefix = _props.prefix,\n        others = _objectWithoutProperties(_props, ['prefix']);\n\n    return React.createElement(Input, _extends({\n      size: 'small',\n      className: prefix + 'tree-node-input'\n    }, others));\n  };\n\n  return TreeNodeInput;\n}(Component), _class.propTypes = {\n  prefix: PropTypes.string\n}, _temp);\nTreeNodeInput.displayName = 'TreeNodeInput';\nexport { TreeNodeInput as default };","map":null,"metadata":{},"sourceType":"module"}