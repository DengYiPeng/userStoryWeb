{"ast":null,"code":"import moment from 'moment';\nexport var PANEL = {\n  TIME: 'time-panel',\n  DATE: 'date-panel'\n};\nexport var DEFAULT_TIME_FORMAT = 'HH:mm:ss';\nexport function isFunction(obj) {\n  return !!(obj && obj.constructor && obj.call && obj.apply);\n}\n/**\n * 将 source 的 time 替换为 target 的 time\n * @param {Object} source 输入值\n * @param {Object} target 目标值\n */\n\nexport function resetValueTime(source, target) {\n  if (!moment.isMoment(source) || !moment.isMoment(target)) {\n    return source;\n  }\n\n  return source.clone().hour(target.hour()).minute(target.minute()).second(target.second());\n}\nexport function formatDateValue(value, format) {\n  var val = typeof value === 'string' ? moment(value, format, false) : value;\n\n  if (val && moment.isMoment(val) && val.isValid()) {\n    return val;\n  }\n\n  return null;\n}\nexport function checkDateValue(props, propName, componentName) {\n  // 支持传入 moment 对象或字符串，字符串不检测是否为日期字符串\n  if (props[propName] && !moment.isMoment(props[propName]) && typeof props[propName] !== 'string') {\n    return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a moment object or format date string!');\n  }\n}\nexport function getDateTimeFormat(format, showTime) {\n  var timeFormat = showTime ? showTime.format || DEFAULT_TIME_FORMAT : '';\n  var dateTimeFormat = timeFormat ? format + ' ' + timeFormat : format;\n  return {\n    format: format,\n    timeFormat: timeFormat,\n    dateTimeFormat: dateTimeFormat\n  };\n}\nexport function extend(source, target) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","map":null,"metadata":{},"sourceType":"module"}