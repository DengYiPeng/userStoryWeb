{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport { filter, parseDataSourceFromChildren, normalizeDataSource, flattingDataSource, filterDataSource } from './util';\n/**\n * manage dataSource for menu list\n */\n\nvar DataStore = function () {\n  function DataStore(options) {\n    _classCallCheck(this, DataStore);\n\n    this.options = _extends({\n      filter: filter,\n      key: undefined,\n      addonKey: false,\n      filterLocal: true\n    }, options); // origin data\n\n    this.dataSource = []; // current data for menu display\n\n    this.menuDataSource = []; // key=>value map for menuDataSource\n\n    this.mapDataSource = {}; // current data can be select (not disabled) on menu\n\n    this.enabledDataSource = [];\n  }\n\n  DataStore.prototype.setOptions = function setOptions(options) {\n    _extends(this.options, options);\n  };\n\n  DataStore.prototype.updateByDS = function updateByDS(dataSource) {\n    var isChildren = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.dataSource = isChildren ? parseDataSourceFromChildren(dataSource) : normalizeDataSource(dataSource);\n    return this.updateAll();\n  };\n\n  DataStore.prototype.updateByKey = function updateByKey(key) {\n    if (key === this.options.key) {\n      return this.getMenuDS();\n    }\n\n    this.options.key = key;\n    return this.updateAll();\n  };\n\n  DataStore.prototype.getOriginDS = function getOriginDS() {\n    return this.dataSource;\n  };\n\n  DataStore.prototype.getMenuDS = function getMenuDS() {\n    return this.menuDataSource;\n  };\n\n  DataStore.prototype.getFlattenDS = function getFlattenDS() {\n    return this.flattenDataSource;\n  };\n\n  DataStore.prototype.getEnableDS = function getEnableDS() {\n    return this.enabledDataSource;\n  };\n\n  DataStore.prototype.getMapDS = function getMapDS() {\n    return this.mapDataSource;\n  };\n\n  DataStore.prototype.updateAll = function updateAll() {\n    var _this = this;\n\n    var _options = this.options,\n        key = _options.key,\n        filter = _options.filter,\n        filterLocal = _options.filterLocal;\n    this.menuDataSource = filterDataSource(this.dataSource, filterLocal ? key : '', filter, this.options.addonKey);\n    this.flattenDataSource = flattingDataSource(this.menuDataSource);\n    this.mapDataSource = {};\n    this.flattenDataSource.forEach(function (item) {\n      _this.mapDataSource['' + item.value] = item;\n    });\n    this.enabledDataSource = this.flattenDataSource.filter(function (item) {\n      return !item.disabled;\n    });\n    return this.menuDataSource;\n  };\n\n  return DataStore;\n}();\n\nexport default DataStore;","map":null,"metadata":{},"sourceType":"module"}