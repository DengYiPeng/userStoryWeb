{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp2;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Progress from '../progress';\nimport Icon from '../icon';\nimport Button from '../button';\nimport { func, obj, KEYCODE } from '../util';\nimport zhCN from '../locale/zh-cn.js';\nimport { previewFile } from './util';\nvar List = (_temp2 = _class = function (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleClose = function (file) {\n      var _this$props = _this.props,\n          onRemove = _this$props.onRemove,\n          uploader = _this$props.uploader;\n      var remove = onRemove(file);\n      func.promiseCall(remove, function () {\n        uploader && uploader.removeFile(file);\n      });\n    }, _this.handleCancel = function (file) {\n      var _this$props2 = _this.props,\n          onCancel = _this$props2.onCancel,\n          uploader = _this$props2.uploader;\n      var cancel = onCancel(file);\n      func.promiseCall(cancel, function () {\n        uploader && uploader.abort(file);\n      });\n    }, _this.onImageError = function (file, obj) {\n      obj.onerror = null;\n\n      _this.props.onImageError(obj, file);\n    }, _this.onPreview = function (file, e) {\n      _this.props.onPreview(file, e);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  List.prototype.componentDidUpdate = function componentDidUpdate() {\n    var _this2 = this;\n\n    if (this.props.listType !== 'image' && this.props.listType !== 'card') {\n      return;\n    }\n\n    this.props.useDataURL && this.props.value.forEach(function (file) {\n      if (typeof document === 'undefined' || typeof window === 'undefined' || !window.FileReader || !window.File || !(file.originFileObj instanceof File) || file.imgURL !== undefined) {\n        return;\n      }\n\n      file.imgURL = '';\n      previewFile(file.originFileObj, function (previewDataUrl) {\n        file.imgURL = previewDataUrl;\n\n        _this2.forceUpdate();\n      });\n    });\n  };\n\n  List.prototype.getInfo = function getInfo(file) {\n    var _classNames;\n\n    var prefixCls = this.props.prefix + 'upload';\n    var downloadURL = file.downloadURL || file.url;\n    var imgURL = file.imgURL || file.url;\n    var size = this.sizeCaculator(file.size);\n    var itemCls = classNames((_classNames = {}, _classNames[prefixCls + '-list-item'] = true, _classNames[prefixCls + '-list-item-' + file.state] = file.state, _classNames));\n    var alt = file.name || file.alt;\n    return {\n      prefixCls: prefixCls,\n      downloadURL: downloadURL,\n      imgURL: imgURL,\n      size: size,\n      itemCls: itemCls,\n      alt: alt\n    };\n  }; // transfer size from number to xx K/ XxxM / xxG\n\n\n  List.prototype.sizeCaculator = function sizeCaculator(size) {\n    var fileSize = parseFloat(size, 10); // fileSize为浮点数 用 < 0.000001 替代 === 0\n\n    if (isNaN(fileSize) || fileSize < 0.0000001) {\n      return 0;\n    }\n\n    var SIZE_SUFFIX = ['B', 'K', 'M', 'G', 'T', 'P'];\n    var suffixIndex = 0; // 在Mac上实验发现 取1024造成显示的大小和实际大小不一致\n    // 因为单位制不同 见 https://superuser.com/questions/938234/size-of-files-in-windows-os-its-kb-or-kb\n\n    var BIT_NUMBER_SYSTEM = 1024;\n\n    while (fileSize >= BIT_NUMBER_SYSTEM && suffixIndex < SIZE_SUFFIX.length) {\n      suffixIndex++;\n      fileSize /= BIT_NUMBER_SYSTEM;\n    }\n\n    var suffix = SIZE_SUFFIX[suffixIndex];\n    fileSize = fileSize.toFixed(2);\n    return '' + fileSize + suffix;\n  };\n\n  List.prototype.getTextList = function getTextList(file) {\n    var _this3 = this;\n\n    var extraRender = this.props.extraRender;\n\n    var _getInfo = this.getInfo(file),\n        prefixCls = _getInfo.prefixCls,\n        downloadURL = _getInfo.downloadURL,\n        size = _getInfo.size,\n        itemCls = _getInfo.itemCls;\n\n    var onClick = function onClick() {\n      return file.state === 'uploading' ? _this3.handleCancel(file) : _this3.handleClose(file);\n    };\n\n    var onKeyDown = function onKeyDown(e) {\n      if (e.keyCode === KEYCODE.ENTER) {\n        onClick();\n      }\n    };\n\n    return React.createElement('div', {\n      className: itemCls,\n      key: file.uid || file.name\n    }, React.createElement('div', null, React.createElement('a', {\n      href: downloadURL,\n      target: '_blank',\n      style: {\n        pointerEvents: downloadURL ? '' : 'none'\n      },\n      className: prefixCls + '-list-item-name'\n    }, React.createElement('span', null, file.name), !!size && React.createElement('span', {\n      className: prefixCls + '-list-item-size'\n    }, '(', size, ')')), file.state === 'uploading' ? React.createElement('div', {\n      className: prefixCls + '-list-item-progress'\n    }, React.createElement(Progress, {\n      size: 'medium',\n      percent: file.percent,\n      textRender: func.noop\n    })) : null, React.createElement('span', {\n      className: prefixCls + '-extra'\n    }, extraRender(file))), this.props.closable ? React.createElement(Icon, {\n      type: 'close',\n      size: 'large',\n      role: 'button',\n      tabIndex: '0',\n      onClick: onClick,\n      onKeyDown: onKeyDown\n    }) : null);\n  };\n\n  List.prototype.getImageList = function getImageList(file) {\n    var _this4 = this;\n\n    var extraRender = this.props.extraRender;\n\n    var _getInfo2 = this.getInfo(file),\n        prefixCls = _getInfo2.prefixCls,\n        downloadURL = _getInfo2.downloadURL,\n        imgURL = _getInfo2.imgURL,\n        size = _getInfo2.size,\n        itemCls = _getInfo2.itemCls,\n        alt = _getInfo2.alt;\n\n    var img = null;\n\n    var onClick = function onClick() {\n      return file.state === 'uploading' ? _this4.handleCancel(file) : _this4.handleClose(file);\n    };\n\n    var onKeyDown = function onKeyDown(e) {\n      if (e.keyCode === KEYCODE.ENTER) {\n        onClick();\n      }\n    };\n\n    if (file.state === 'uploading' || file.state === 'selected' && !imgURL) {\n      img = React.createElement(Icon, {\n        type: 'picture'\n      });\n    } else if (file.state === 'error') {\n      img = React.createElement(Icon, {\n        type: 'cry'\n      });\n    } else {\n      img = React.createElement('img', {\n        src: imgURL,\n        onError: this.onImageError.bind(this, file),\n        tabIndex: '0',\n        alt: alt,\n        onClick: this.onPreview.bind(this, file)\n      });\n    }\n\n    return React.createElement('div', {\n      className: itemCls,\n      key: file.uid || file.name\n    }, React.createElement('div', {\n      className: prefixCls + '-list-item-thumbnail'\n    }, img), file.state !== 'uploading' ? React.createElement('a', {\n      href: downloadURL,\n      target: '_blank',\n      style: {\n        pointerEvents: downloadURL ? '' : 'none'\n      },\n      className: prefixCls + '-list-item-name'\n    }, React.createElement('span', null, file.name), !!size && React.createElement('span', {\n      className: prefixCls + '-list-item-size'\n    }, '(', size, ')')) : null, file.state === 'uploading' ? React.createElement('div', {\n      className: prefixCls + '-list-item-progress'\n    }, React.createElement(Progress, {\n      size: 'medium',\n      percent: file.percent,\n      textRender: func.noop\n    })) : null, React.createElement('span', {\n      className: prefixCls + '-extra'\n    }, extraRender(file)), this.props.closable ? React.createElement(Icon, {\n      type: 'close',\n      size: 'large',\n      tabIndex: '0',\n      role: 'button',\n      onClick: onClick,\n      onKeyDown: onKeyDown\n    }) : null);\n  };\n\n  List.prototype.getPictureCardList = function getPictureCardList(file) {\n    var _this5 = this;\n\n    var locale = this.props.locale;\n\n    var _getInfo3 = this.getInfo(file),\n        prefixCls = _getInfo3.prefixCls,\n        downloadURL = _getInfo3.downloadURL,\n        imgURL = _getInfo3.imgURL,\n        itemCls = _getInfo3.itemCls,\n        alt = _getInfo3.alt;\n\n    var img = null;\n\n    if (file.state === 'uploading' || file.state === 'selected' && !imgURL) {\n      img = React.createElement('div', {\n        className: prefixCls + '-list-item-handler'\n      }, React.createElement(Icon, {\n        type: 'picture'\n      }), React.createElement(Button, {\n        text: true,\n        onClick: function onClick() {\n          return _this5.handleCancel(file);\n        }\n      }, locale.card.cancel));\n    } else if (file.state === 'error') {\n      img = React.createElement('div', {\n        className: prefixCls + '-list-item-handler'\n      }, React.createElement(Icon, {\n        type: 'cry'\n      }));\n    } else {\n      img = React.createElement('img', {\n        src: imgURL,\n        tabIndex: '0',\n        alt: alt,\n        onError: this.onImageError.bind(this, file),\n        onClick: this.onPreview.bind(this, file)\n      });\n    }\n\n    var onClose = function onClose() {\n      return _this5.handleClose(file);\n    };\n\n    var onKeyDownClose = function onKeyDownClose(e) {\n      if (e.keyCode === KEYCODE.ENTER) {\n        onClose();\n      }\n    };\n\n    return React.createElement('div', {\n      className: itemCls,\n      key: file.uid || file.name\n    }, React.createElement('div', {\n      className: prefixCls + '-list-item-wrapper'\n    }, React.createElement('div', {\n      className: prefixCls + '-list-item-thumbnail'\n    }, img), file.state === 'uploading' ? React.createElement('div', {\n      className: prefixCls + '-list-item-progress'\n    }, React.createElement(Progress, {\n      size: 'medium',\n      percent: file.percent,\n      textRender: func.noop\n    })) : null, file.state !== 'uploading' ? React.createElement('span', {\n      className: prefixCls + '-tool ' + (!this.props.closable ? '`${prefixCls}-noclose' : '')\n    }, React.createElement('a', {\n      href: downloadURL,\n      target: '_blank',\n      tabIndex: downloadURL ? '0' : '-1',\n      style: {\n        pointerEvents: downloadURL ? '' : 'none'\n      }\n    }, React.createElement(Icon, {\n      type: downloadURL ? 'download' : '',\n      className: prefixCls + '-tool-download-icon'\n    })), this.props.closable ? React.createElement('span', {\n      className: prefixCls + '-tool-close'\n    }, React.createElement(Icon, {\n      type: 'ashbin',\n      tabIndex: '0',\n      role: 'button',\n      onClick: onClose,\n      onKeyDown: onKeyDownClose\n    })) : null) : ''), React.createElement('span', {\n      className: prefixCls + '-list-item-name'\n    }, file.name));\n  };\n\n  List.prototype.render = function render() {\n    var _this6 = this,\n        _classNames2;\n\n    var _props = this.props,\n        listType = _props.listType,\n        children = _props.children,\n        prefix = _props.prefix;\n    var prefixCls = prefix + 'upload';\n    var list = this.props.value.map(function (file) {\n      if (listType === 'text') {\n        return _this6.getTextList(file);\n      } else if (listType === 'image') {\n        return _this6.getImageList(file);\n      } else if (listType === 'card') {\n        return _this6.getPictureCardList(file);\n      }\n\n      return null;\n    });\n    var listclassNames = classNames((_classNames2 = {}, _classNames2[prefixCls + '-list'] = true, _classNames2[prefixCls + '-list-' + this.props.listType] = true, _classNames2));\n    var others = obj.pickAttrsWith(this.props, 'data-');\n    return React.createElement('div', _extends({}, others, {\n      className: listclassNames\n    }), list, children);\n  };\n\n  return List;\n}(Component), _class.propTypes = {\n  prefix: PropTypes.string,\n\n  /**\n   * 多语言\n   */\n  locale: PropTypes.object,\n\n  /**\n   * 文件列表，数据格式请参考 文件对象\n   */\n  listType: PropTypes.oneOf(['text', 'image', 'card']),\n\n  /**\n   * 文件列表\n   */\n  value: PropTypes.array,\n  closable: PropTypes.bool,\n\n  /**\n   * 删除文件回调(支持Promise)\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * 取消上传回调(支持Promise)\n   */\n  onCancel: PropTypes.func,\n\n  /**\n   * 头像加载出错回调\n   */\n  onImageError: PropTypes.func,\n\n  /**\n   * listType=card时点击图片回调\n   */\n  onPreview: PropTypes.func,\n\n  /**\n   * 自定义额外渲染\n   */\n  extraRender: PropTypes.func,\n  children: PropTypes.node,\n  uploader: PropTypes.any,\n  useDataURL: PropTypes.bool\n}, _class.defaultProps = {\n  prefix: 'next-',\n  listType: 'text',\n  value: [],\n  locale: zhCN.Upload,\n  closable: false,\n  onRemove: func.noop,\n  onCancel: func.noop,\n  extraRender: func.noop,\n  onImageError: func.noop,\n  onPreview: func.noop\n}, _temp2);\nList.displayName = 'List';\nexport default List;","map":null,"metadata":{},"sourceType":"module"}