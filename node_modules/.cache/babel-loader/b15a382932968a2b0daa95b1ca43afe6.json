{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { inRange, getPercent } from '../utils';\nvar Scale = (_temp = _class = function (_React$Component) {\n  _inherits(Scale, _React$Component);\n\n  function Scale() {\n    _classCallCheck(this, Scale);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Scale.prototype._renderItems = function _renderItems() {\n    var _props = this.props,\n        min = _props.min,\n        max = _props.max,\n        value = _props.value,\n        prefix = _props.prefix,\n        scales = _props.scales;\n    var items = [];\n    scales.forEach(function (scale, i) {\n      var _classNames;\n\n      var classes = classNames((_classNames = {}, _classNames[prefix + 'range-scale-item'] = true, _classNames.activated = inRange(scale, value, min), _classNames));\n      var left = getPercent(min, max, scale) + '%';\n      items.push( // \"key\" is for https://fb.me/react-warning-keys\n      React.createElement('span', {\n        className: classes,\n        style: {\n          left: left\n        },\n        key: i\n      }));\n    });\n    return items;\n  };\n\n  Scale.prototype.render = function render() {\n    var _classNames2;\n\n    var prefix = this.props.prefix;\n    var classes = classNames((_classNames2 = {}, _classNames2[prefix + 'range-scale'] = true, _classNames2));\n\n    var items = this._renderItems();\n\n    return React.createElement('div', {\n      className: classes\n    }, items);\n  };\n\n  return Scale;\n}(React.Component), _class.propTypes = {\n  min: PropTypes.number,\n  max: PropTypes.number,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  prefix: PropTypes.string,\n  scales: PropTypes.arrayOf(PropTypes.number)\n}, _class.defaultProps = {\n  prefix: 'next-',\n  min: 0,\n  max: 100,\n  value: 0\n}, _temp);\nScale.displayName = 'Scale';\nexport { Scale as default };","map":null,"metadata":{},"sourceType":"module"}