{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport Overlay from '../overlay';\nimport ConfigProvider from '../config-provider';\nimport { func } from '../util';\nvar noop = func.noop,\n    makeChain = func.makeChain,\n    bindCtx = func.bindCtx;\nvar Popup = Overlay.Popup;\n/**\n * Dropdown\n * @description 继承 Popup 的 API，除非特别说明\n */\n\nvar Dropdown = (_temp = _class = function (_Component) {\n  _inherits(Dropdown, _Component);\n\n  function Dropdown(props) {\n    _classCallCheck(this, Dropdown);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {\n      visible: 'visible' in props ? props.visible : props.defaultVisible || false\n    };\n    bindCtx(_this, ['onMenuClick', 'onVisibleChange']);\n    return _this;\n  }\n\n  Dropdown.prototype.getVisible = function getVisible() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n    return 'visible' in props ? props.visible : this.state.visible;\n  };\n\n  Dropdown.prototype.onMenuClick = function onMenuClick() {\n    this.onVisibleChange(false, 'fromContent');\n  };\n\n  Dropdown.prototype.onVisibleChange = function onVisibleChange(visible, from) {\n    this.setState({\n      visible: visible\n    });\n    this.props.onVisibleChange(visible, from);\n  };\n\n  Dropdown.prototype.render = function render() {\n    var child = Children.only(this.props.children);\n\n    if (typeof child.type === 'function' && child.type.isNextMenu) {\n      child = React.cloneElement(child, {\n        onItemClick: makeChain(this.onMenuClick, child.props.onItemClick)\n      });\n    }\n\n    return React.createElement(Popup, _extends({}, this.props, {\n      visible: this.getVisible(),\n      onVisibleChange: this.onVisibleChange,\n      canCloseByOutSideClick: true\n    }), child);\n  };\n\n  return Dropdown;\n}(Component), _class.propTypes = {\n  prefix: PropTypes.string,\n  pure: PropTypes.bool,\n  className: PropTypes.string,\n\n  /**\n   * 弹层内容\n   */\n  children: PropTypes.node,\n\n  /**\n   * 弹层当前是否显示\n   */\n  visible: PropTypes.bool,\n\n  /**\n   * 弹层默认是否显示\n   */\n  defaultVisible: PropTypes.bool,\n\n  /**\n   * 弹层显示或隐藏时触发的回调函数\n   * @param {Boolean} visible 弹层是否显示\n   * @param {String} type 触发弹层显示或隐藏的来源\n   * @param {Object} e DOM事件\n   */\n  onVisibleChange: PropTypes.func,\n\n  /**\n   * 触发弹层显示或者隐藏的元素\n   */\n  trigger: PropTypes.node,\n\n  /**\n   * 触发弹层显示或隐藏的操作类型\n   */\n  triggerType: PropTypes.oneOf(['hover', 'click', 'focus']),\n\n  /**\n   * 设置此属性，弹层无法显示或隐藏\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * 弹层相对于触发元素的定位, 详见 Overlay 的定位部分\n   */\n  align: PropTypes.string,\n\n  /**\n   * 弹层相对于触发元素定位的微调\n   */\n  offset: PropTypes.array,\n\n  /**\n   * 弹层显示或隐藏的延时时间（以毫秒为单位），在 triggerType 被设置为 hover 时生效\n   */\n  delay: PropTypes.number,\n\n  /**\n   * 弹层打开时是否让其中的元素自动获取焦点\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * 是否显示遮罩\n   */\n  hasMask: PropTypes.bool,\n\n  /**\n   * 隐藏时是否保留子节点\n   */\n  cache: PropTypes.bool,\n\n  /**\n   * 配置动画的播放方式，支持 { in: 'enter-class', out: 'leave-class' } 的对象参数，如果设置为 false，则不播放动画\n   * @default { in: 'expandInDown', out: 'expandOutUp' }\n   */\n  animation: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n}, _class.defaultProps = {\n  prefix: 'next-',\n  pure: false,\n  defaultVisible: false,\n  onVisibleChange: noop,\n  triggerType: 'hover',\n  disabled: false,\n  align: 'tl bl',\n  offset: [0, 0],\n  delay: 200,\n  autoFocus: true,\n  hasMask: false,\n  cache: false,\n  onPosition: noop\n}, _temp);\nDropdown.displayName = 'Dropdown';\nexport default ConfigProvider.config(Dropdown);","map":null,"metadata":{},"sourceType":"module"}