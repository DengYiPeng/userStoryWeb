{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport { func, obj } from '../../util';\nimport { uid } from '../util';\nimport request from './request';\nvar noop = func.noop;\n\nvar Uploader = function () {\n  function Uploader(options) {\n    _classCallCheck(this, Uploader);\n\n    this.options = _extends({\n      beforeUpload: noop,\n      onProgress: noop,\n      onSuccess: noop,\n      onError: noop,\n      data: {},\n      name: 'file',\n      method: 'post'\n    }, options);\n    this.reqs = {};\n  }\n\n  Uploader.prototype.setOptions = function setOptions(options) {\n    _extends(this.options, options);\n  };\n\n  Uploader.prototype.startUpload = function startUpload(files) {\n    var _this = this;\n\n    var filesArr = files.length ? Array.prototype.slice.call(files) : [files];\n    filesArr.forEach(function (file) {\n      file.uid = file.uid || uid();\n\n      _this.upload(file);\n    });\n  };\n\n  Uploader.prototype.abort = function abort(file) {\n    var reqs = this.reqs;\n\n    if (file) {\n      var _uid = file;\n\n      if (file && file.uid) {\n        _uid = file.uid;\n      }\n\n      if (reqs[_uid]) {\n        reqs[_uid].abort();\n\n        delete reqs[_uid];\n      }\n    } else {\n      Object.keys(reqs).forEach(function (uid) {\n        if (reqs[uid]) {\n          reqs[uid].abort();\n        }\n\n        delete reqs[uid];\n      });\n    }\n  };\n\n  Uploader.prototype.upload = function upload(file) {\n    var _this2 = this;\n\n    var _options = this.options,\n        beforeUpload = _options.beforeUpload,\n        action = _options.action,\n        name = _options.name,\n        headers = _options.headers,\n        timeout = _options.timeout,\n        withCredentials = _options.withCredentials,\n        method = _options.method,\n        data = _options.data;\n    var before = beforeUpload(file, {\n      action: action,\n      name: name,\n      headers: headers,\n      timeout: timeout,\n      withCredentials: withCredentials,\n      method: method,\n      data: data\n    });\n    func.promiseCall(before, function (options) {\n      if (options === false) {\n        _this2.options.onError(null, null, file);\n\n        return;\n      }\n\n      _this2.post(file, obj.isPlainObject(options) ? options : undefined);\n    }, function () {\n      _this2.options.onError(null, null, file);\n    });\n  };\n\n  Uploader.prototype.post = function post(file) {\n    var _this3 = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var requestOptions = _extends({}, this.options, options);\n\n    var action = requestOptions.action,\n        name = requestOptions.name,\n        headers = requestOptions.headers,\n        timeout = requestOptions.timeout,\n        withCredentials = requestOptions.withCredentials,\n        _onProgress = requestOptions.onProgress,\n        _onSuccess = requestOptions.onSuccess,\n        _onError = requestOptions.onError,\n        method = requestOptions.method;\n    var data = requestOptions.data;\n\n    if (typeof data === 'function') {\n      data = data(file);\n    }\n\n    var uid = file.uid;\n    this.reqs[uid] = request({\n      action: action,\n      filename: name,\n      file: file,\n      data: data,\n      timeout: timeout,\n      headers: headers,\n      withCredentials: withCredentials,\n      method: method,\n      onProgress: function onProgress(e) {\n        _onProgress(e, file);\n      },\n      onSuccess: function onSuccess(ret) {\n        delete _this3.reqs[uid];\n\n        _onSuccess(ret, file);\n      },\n      onError: function onError(err, ret) {\n        delete _this3.reqs[uid];\n\n        _onError(err, ret, file);\n      }\n    });\n  };\n\n  return Uploader;\n}();\n\nexport { Uploader as default };","map":null,"metadata":{},"sourceType":"module"}