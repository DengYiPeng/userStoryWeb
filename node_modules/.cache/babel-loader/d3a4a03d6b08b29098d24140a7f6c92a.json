{"ast":null,"code":"import * as util from '../util';\n/**\n *  Rule for validating minimum and maximum allowed values.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction size(rule, value, errors, options) {\n  var key = null;\n  var isNum = typeof value === 'number';\n  var isStr = typeof value === 'string';\n\n  if (isNum) {\n    key = 'number';\n  } else if (isStr) {\n    key = 'string';\n  }\n\n  if (!key) {\n    return false;\n  }\n\n  var val = value;\n  var max = Number(rule.max);\n  var min = Number(rule.min);\n\n  if (min || max) {\n    if (isStr) {\n      val = Number(val);\n    }\n\n    if (val < min) {\n      errors.push(util.format(options.messages[key].min, rule.field, rule.min));\n    } else if (val > max) {\n      errors.push(util.format(options.messages[key].max, rule.field, rule.max));\n    }\n  }\n}\n\nexport default size;","map":null,"metadata":{},"sourceType":"module"}