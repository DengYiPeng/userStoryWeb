{"ast":null,"code":"import _classCallCheck from \"/Users/wanghui/user_story/userStoryWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wanghui/user_story/userStoryWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wanghui/user_story/userStoryWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wanghui/user_story/userStoryWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wanghui/user_story/userStoryWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wanghui/user_story/userStoryWeb/src/containers/register/RegisterForm.js\";\n\n/* eslint react/no-string-refs:0 */\nimport React, { Component } from 'react';\nimport { Message } from '@alifd/next';\nimport AuthForm from './AuthForm';\n\nvar RegisterForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegisterForm, _Component);\n\n  function RegisterForm(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterForm).call(this, props));\n\n    _this.checkPasswd = function (rule, value, callback) {\n      if (!value) {\n        callback('请输入正确的密码');\n      } else if (value.length < 8) {\n        callback('密码必须大于8位');\n      } else if (value.length > 16) {\n        callback('密码必须小于16位');\n      } else {\n        callback();\n      }\n    };\n\n    _this.checkPasswd2 = function (rule, value, callback, source) {\n      if (!value) {\n        callback('请输入正确的密码');\n      } else if (value && _this.state.value.passwd !== source.rePasswd) {\n        callback('两次输入密码不一致');\n      } else {\n        callback();\n      }\n    };\n\n    _this.formChange = function (value) {\n      console.log('formChange:', value);\n\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.handleSubmit = function (errors, values) {\n      if (errors) {\n        console.log('errors', errors);\n        return;\n      }\n\n      console.log('values:', values);\n      Message.success('注册成功'); // 注册成功后做对应的逻辑处理\n    };\n\n    _this.state = {\n      value: {}\n    };\n    return _this;\n  }\n\n  _createClass(RegisterForm, [{\n    key: \"render\",\n    value: function render() {\n      var self = this;\n      var config = [{\n        label: '用户名',\n        component: 'Input',\n        componentProps: {\n          placeholder: '用户名',\n          size: 'large'\n        },\n        formBinderProps: {\n          name: 'name',\n          required: true,\n          message: '请输入正确的用户名'\n        }\n      }, {\n        label: '邮箱',\n        component: 'Input',\n        componentProps: {\n          placeholder: '邮箱',\n          size: 'large'\n        },\n        formBinderProps: {\n          type: 'email',\n          name: 'email',\n          required: true,\n          message: '请输入正确的邮箱'\n        }\n      }, {\n        label: '密码',\n        component: 'Input',\n        componentProps: {\n          placeholder: '至少8位密码',\n          size: 'large',\n          htmlType: 'password'\n        },\n        formBinderProps: {\n          name: 'passwd',\n          required: true,\n          validator: function validator(rule, value, callback, source) {\n            self.checkPasswd(rule, value, callback, source);\n          }\n        }\n      }, {\n        label: '确认密码',\n        component: 'Input',\n        componentProps: {\n          placeholder: '确认密码',\n          size: 'large',\n          htmlType: 'password'\n        },\n        formBinderProps: {\n          name: 'rePasswd',\n          required: true,\n          validator: function validator(rule, value, callback, source) {\n            self.checkPasswd2(rule, value, callback, source);\n          }\n        }\n      }, {\n        label: '注册',\n        component: 'Button',\n        componentProps: {\n          type: 'primary'\n        },\n        formBinderProps: {}\n      }];\n      var initFields = {\n        name: '',\n        email: '',\n        passwd: '',\n        rePasswd: ''\n      };\n      var links = [{\n        to: '/',\n        text: '已有账号'\n      }, {\n        to: '/forgetpassword',\n        text: '找回密码'\n      }];\n      return React.createElement(\"div\", {\n        className: \"user-register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(AuthForm, {\n        title: \"\\u6CE8\\u518C\",\n        config: config,\n        initFields: initFields,\n        links: links,\n        formChange: this.formChange,\n        handleSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RegisterForm;\n}(Component);\n\nRegisterForm.displayName = 'RegisterForm';\nRegisterForm.propTypes = {};\nRegisterForm.defaultProps = {};\nexport { RegisterForm as default };","map":{"version":3,"sources":["/Users/wanghui/user_story/userStoryWeb/src/containers/register/RegisterForm.js"],"names":["React","Component","Message","AuthForm","RegisterForm","props","checkPasswd","rule","value","callback","length","checkPasswd2","source","state","passwd","rePasswd","formChange","console","log","setState","handleSubmit","errors","values","success","self","config","label","component","componentProps","placeholder","size","formBinderProps","name","required","message","type","htmlType","validator","initFields","email","links","to","text","displayName","propTypes","defaultProps"],"mappings":"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","sourcesContent":["/* eslint react/no-string-refs:0 */\nimport React, { Component } from 'react';\nimport { Message } from '@alifd/next';\nimport AuthForm from './AuthForm';\n\nexport default class RegisterForm extends Component {\n  static displayName = 'RegisterForm';\n\n  static propTypes = {};\n\n  static defaultProps = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: {},\n    };\n  }\n\n  checkPasswd = (rule, value, callback) => {\n    if (!value) {\n      callback('请输入正确的密码');\n    } else if (value.length < 8) {\n      callback('密码必须大于8位');\n    } else if (value.length > 16) {\n      callback('密码必须小于16位');\n    } else {\n      callback();\n    }\n  };\n\n  checkPasswd2 = (rule, value, callback, source) => {\n    if (!value) {\n      callback('请输入正确的密码');\n    } else if (value && this.state.value.passwd !== source.rePasswd) {\n      callback('两次输入密码不一致');\n    } else {\n      callback();\n    }\n  };\n\n  formChange = (value) => {\n    console.log('formChange:', value);\n    this.setState({\n      value,\n    });\n  };\n\n  handleSubmit = (errors, values) => {\n    if (errors) {\n      console.log('errors', errors);\n      return;\n    }\n    console.log('values:', values);\n    Message.success('注册成功');\n    // 注册成功后做对应的逻辑处理\n  };\n\n  render() {\n    const self = this;\n    const config = [\n      {\n        label: '用户名',\n        component: 'Input',\n        componentProps: {\n          placeholder: '用户名',\n          size: 'large',\n        },\n        formBinderProps: {\n          name: 'name',\n          required: true,\n          message: '请输入正确的用户名',\n        },\n      },\n      {\n        label: '邮箱',\n        component: 'Input',\n        componentProps: {\n          placeholder: '邮箱',\n          size: 'large',\n        },\n        formBinderProps: {\n          type: 'email',\n          name: 'email',\n          required: true,\n          message: '请输入正确的邮箱',\n        },\n      },\n      {\n        label: '密码',\n        component: 'Input',\n        componentProps: {\n          placeholder: '至少8位密码',\n          size: 'large',\n          htmlType: 'password',\n        },\n        formBinderProps: {\n          name: 'passwd',\n          required: true,\n          validator(rule, value, callback, source) {\n            self.checkPasswd(rule, value, callback, source);\n          },\n        },\n      },\n      {\n        label: '确认密码',\n        component: 'Input',\n        componentProps: {\n          placeholder: '确认密码',\n          size: 'large',\n          htmlType: 'password',\n        },\n        formBinderProps: {\n          name: 'rePasswd',\n          required: true,\n          validator(rule, value, callback, source) {\n            self.checkPasswd2(rule, value, callback, source);\n          },\n        },\n      },\n      {\n        label: '注册',\n        component: 'Button',\n        componentProps: {\n          type: 'primary',\n        },\n        formBinderProps: {},\n      },\n    ];\n\n    const initFields = {\n      name: '',\n      email: '',\n      passwd: '',\n      rePasswd: '',\n    };\n\n    const links = [\n      { to: '/', text: '已有账号' },\n      { to: '/forgetpassword', text: '找回密码' },\n    ];\n\n    return (\n      <div className=\"user-register\">\n        <AuthForm\n          title=\"注册\"\n          config={config}\n          initFields={initFields}\n          links={links}\n          formChange={this.formChange}\n          handleSubmit={this.handleSubmit}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}