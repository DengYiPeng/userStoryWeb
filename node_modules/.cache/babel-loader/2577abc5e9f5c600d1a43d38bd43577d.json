{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Overlay from '../overlay';\nimport { func, obj, log } from '../util';\nimport BalloonInner from './inner';\nimport { normalMap, edgeMap } from './alignMap';\nvar noop = func.noop;\nvar Popup = Overlay.Popup;\nvar alignMap = normalMap;\n/** Balloon */\n\nvar Balloon = (_temp = _class = function (_React$Component) {\n  _inherits(Balloon, _React$Component);\n\n  function Balloon(props, context) {\n    _classCallCheck(this, Balloon);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.state = {\n      align: props.align,\n      visible: 'visible' in props ? props.visible : props.defaultVisible\n    };\n    _this._onClose = _this._onClose.bind(_this);\n    _this._onPosition = _this._onPosition.bind(_this);\n    _this._onVisibleChange = _this._onVisibleChange.bind(_this);\n    _this._contentId = props.id;\n    return _this;\n  }\n\n  Balloon.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if ('visible' in nextProps) {\n      this.setState({\n        visible: nextProps.visible\n      });\n    }\n\n    if ('align' in nextProps) {\n      this.setState({\n        align: nextProps.align\n      });\n    }\n  };\n\n  Balloon.prototype._onVisibleChange = function _onVisibleChange(visible, trigger) {\n    // Not Controlled\n    if (!('visible' in this.props)) {\n      this.setState({\n        visible: visible\n      });\n    }\n\n    this.props.onVisibleChange(visible, trigger);\n\n    if (!visible) {\n      this.props.onClose();\n    }\n  };\n\n  Balloon.prototype._onClose = function _onClose(e) {\n    this._onVisibleChange(false, 'closeClick'); //必须加上preventDefault,否则单测IE下报错,出现full page reload 异常\n\n\n    e.preventDefault();\n  };\n\n  Balloon.prototype._onPosition = function _onPosition(res) {\n    var rtl = this.props.rtl;\n    alignMap = this.props.alignEdge ? edgeMap : normalMap;\n    var newAlign = res.align.join(' ');\n    var resAlign = void 0;\n    var alignKey = 'align';\n\n    if (rtl) {\n      alignKey = 'rtlAlign';\n    }\n\n    for (var key in alignMap) {\n      if (alignMap[key][alignKey] === newAlign) {\n        resAlign = key;\n        break;\n      }\n    }\n\n    resAlign = resAlign || this.state.align;\n\n    if (resAlign !== this.state.align) {\n      this.setState({\n        align: resAlign\n      });\n    }\n  };\n\n  Balloon.prototype.render = function render() {\n    var _props = this.props,\n        type = _props.type,\n        prefix = _props.prefix,\n        className = _props.className,\n        alignEdge = _props.alignEdge,\n        trigger = _props.trigger,\n        triggerType = _props.triggerType,\n        children = _props.children,\n        closable = _props.closable,\n        shouldUpdatePosition = _props.shouldUpdatePosition,\n        delay = _props.delay,\n        needAdjust = _props.needAdjust,\n        safeId = _props.safeId,\n        autoFocus = _props.autoFocus,\n        safeNode = _props.safeNode,\n        onClick = _props.onClick,\n        onHover = _props.onHover,\n        animation = _props.animation,\n        offset = _props.offset,\n        style = _props.style,\n        container = _props.container,\n        popupContainer = _props.popupContainer,\n        cache = _props.cache,\n        popupStyle = _props.popupStyle,\n        popupClassName = _props.popupClassName,\n        popupProps = _props.popupProps,\n        rtl = _props.rtl,\n        others = _objectWithoutProperties(_props, ['type', 'prefix', 'className', 'alignEdge', 'trigger', 'triggerType', 'children', 'closable', 'shouldUpdatePosition', 'delay', 'needAdjust', 'safeId', 'autoFocus', 'safeNode', 'onClick', 'onHover', 'animation', 'offset', 'style', 'container', 'popupContainer', 'cache', 'popupStyle', 'popupClassName', 'popupProps', 'rtl']);\n\n    if (container) {\n      log.deprecated('container', 'popupContainer', 'Balloon');\n    }\n\n    var align = this.state.align;\n    alignMap = alignEdge ? edgeMap : normalMap;\n\n    var _prefix = this.context.prefix || prefix;\n\n    var trOrigin = 'trOrigin';\n\n    if (rtl) {\n      trOrigin = 'rtlTrOrigin';\n    }\n\n    var _offset = [alignMap[align].offset[0] + offset[0], alignMap[align].offset[1] + offset[1]];\n    var transformOrigin = alignMap[align][trOrigin];\n\n    var _style = _extends({\n      transformOrigin: transformOrigin\n    }, style);\n\n    var content = React.createElement(BalloonInner, _extends({}, obj.pickOthers(Object.keys(Balloon.propTypes), others), {\n      id: this._contentId,\n      prefix: _prefix,\n      closable: closable,\n      onClose: this._onClose,\n      className: className,\n      style: _style,\n      align: align,\n      type: type,\n      rtl: rtl,\n      alignEdge: alignEdge\n    }), children);\n    var triggerProps = {};\n    triggerProps['aria-describedby'] = this._contentId;\n    triggerProps.tabIndex = '0';\n    var newTrigger = React.cloneElement(trigger, triggerProps);\n    return React.createElement(Popup, _extends({}, popupProps, {\n      trigger: this._contentId ? newTrigger : trigger,\n      cache: cache,\n      safeId: safeId,\n      triggerType: triggerType,\n      align: alignMap[align].align,\n      offset: _offset,\n      visible: this.state.visible,\n      onPosition: this._onPosition,\n      onClick: onClick,\n      onHover: onHover,\n      afterClose: this.props.afterClose,\n      onVisibleChange: this._onVisibleChange,\n      shouldUpdatePosition: shouldUpdatePosition,\n      needAdjust: needAdjust,\n      animation: animation,\n      delay: delay,\n      autoFocus: autoFocus,\n      safeNode: safeNode,\n      container: popupContainer || container,\n      className: popupClassName,\n      style: popupStyle,\n      rtl: rtl\n    }), content);\n  };\n\n  return Balloon;\n}(React.Component), _class.contextTypes = {\n  prefix: PropTypes.string\n}, _class.propTypes = {\n  prefix: PropTypes.string,\n  pure: PropTypes.bool,\n  rtl: PropTypes.bool,\n\n  /**\n   * 自定义类名\n   */\n  className: PropTypes.string,\n\n  /**\n   * 自定义内敛样式\n   */\n  style: PropTypes.object,\n\n  /**\n   * 浮层的内容\n   */\n  children: PropTypes.any,\n  size: PropTypes.string,\n\n  /**\n   * 样式类型\n   */\n  type: PropTypes.oneOf(['normal', 'primary']),\n\n  /**\n   * 弹层当前显示的状态\n   */\n  visible: PropTypes.bool,\n\n  /**\n   * 弹层默认显示的状态\n   */\n  defaultVisible: PropTypes.bool,\n\n  /**\n   * 弹层在显示和隐藏触发的事件\n   * @param {Boolean} visible 弹层是否隐藏和显示\n   */\n  onVisibleChange: PropTypes.func,\n\n  /**\n   * 弹出层对齐方式\n   */\n  alignEdge: PropTypes.bool,\n\n  /**\n   * 是否显示关闭按钮\n   */\n  closable: PropTypes.bool,\n\n  /**\n   * 弹出层位置\n   * @enumdesc 上, 右, 下, 左, 上左, 上右, 下左, 下右, 左上, 左下, 右上, 右下 及其 两两组合\n   */\n  align: PropTypes.oneOf(['t', 'r', 'b', 'l', 'tl', 'tr', 'bl', 'br', 'lt', 'lb', 'rt', 'rb']),\n\n  /**\n   * 弹层相对于trigger的定位的微调\n   */\n  offset: PropTypes.array,\n\n  /**\n   * 触发元素\n   */\n  trigger: PropTypes.any,\n\n  /**\n   * 触发行为\n   * 鼠标悬浮, 获取到焦点, 鼠标点击('hover'，'focus'，'click')或者它们组成的数组，如 ['hover', 'focus']\n   */\n  triggerType: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  onClick: PropTypes.func,\n\n  /**\n   * 任何visible为false时会触发的事件\n   */\n  onClose: PropTypes.func,\n  onHover: PropTypes.func,\n\n  /**\n   * 是否进行自动位置调整\n   */\n  needAdjust: PropTypes.bool,\n\n  /**\n   * 弹层在触发以后的延时显示, 单位毫秒 ms\n   */\n  delay: PropTypes.number,\n\n  /**\n   * 浮层关闭后触发的事件, 如果有动画，则在动画结束后触发\n   */\n  afterClose: PropTypes.func,\n\n  /**\n   * 强制更新定位信息\n   */\n  shouldUpdatePosition: PropTypes.bool,\n\n  /**\n   * 弹层出现后是否自动focus到内部第一个元素\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * 安全节点:对于triggetType为click的浮层,会在点击除了浮层外的其它区域时关闭浮层.safeNode用于添加不触发关闭的节点, 值可以是dom节点的id或者是节点的dom对象\n   */\n  safeNode: PropTypes.string,\n\n  /**\n   * 用来指定safeNode节点的id，和safeNode配合使用\n   */\n  safeId: PropTypes.string,\n\n  /**\n   * 配置动画的播放方式\n   * @param {String} in 进场动画\n   * @param {String} out 出场动画\n   */\n  animation: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n\n  /**\n   * 弹层的dom节点关闭时是否删除\n   */\n  cache: PropTypes.bool,\n\n  /**\n   * 指定浮层渲染的父节点, 可以为节点id的字符串，也可以返回节点的函数。\n   */\n  popupContainer: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  container: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * 弹层组件style，透传给Popup\n   */\n  popupStyle: PropTypes.object,\n\n  /**\n   * 弹层组件className，透传给Popup\n   */\n  popupClassName: PropTypes.string,\n\n  /**\n   * 弹层组件属性，透传给Popup\n   */\n  popupProps: PropTypes.object,\n\n  /**\n   * 弹层id, 传入值才会支持无障碍\n   */\n  id: PropTypes.string\n}, _class.defaultProps = {\n  prefix: 'next-',\n  pure: false,\n  type: 'normal',\n  closable: true,\n  defaultVisible: false,\n  size: 'medium',\n  alignEdge: false,\n  align: 'b',\n  offset: [0, 0],\n  trigger: React.createElement('span', null),\n  onClose: noop,\n  afterClose: noop,\n  onVisibleChange: noop,\n  needAdjust: false,\n  triggerType: 'hover',\n  safeNode: undefined,\n  safeId: null,\n  autoFocus: false,\n  animation: {\n    in: 'zoomIn',\n    out: 'zoomOut'\n  },\n  cache: false,\n  popupStyle: {},\n  popupClassName: '',\n  popupProps: {}\n}, _temp);\nBalloon.displayName = 'Balloon';\nexport { Balloon as default };","map":null,"metadata":{},"sourceType":"module"}