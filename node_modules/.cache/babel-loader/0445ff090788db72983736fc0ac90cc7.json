{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp2;\n\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport FixedBody from '../fixed/body';\n/* eslint-disable react/prefer-stateless-function */\n\nvar LockBody = (_temp2 = _class = function (_React$Component) {\n  _inherits(LockBody, _React$Component);\n\n  function LockBody() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, LockBody);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onBodyScroll = function () {\n      _this.context.onLockBodyScroll();\n    }, _this.onBodyWheel = function (e) {\n      _this.context.onLockBodyWheel(e);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  LockBody.prototype.componentDidMount = function componentDidMount() {\n    this.context.getLockNode('body', findDOMNode(this), this.context.lockType);\n  };\n\n  LockBody.prototype.render = function render() {\n    return React.createElement(FixedBody, _extends({}, this.props, {\n      onScroll: this.onBodyScroll,\n      onWheel: this.onBodyWheel\n    }));\n  };\n\n  return LockBody;\n}(React.Component), _class.propTypes = _extends({}, FixedBody.propTypes), _class.contextTypes = _extends({}, FixedBody.contextTypes, {\n  getLockNode: PropTypes.func,\n  onLockBodyScroll: PropTypes.func,\n  onLockBodyWheel: PropTypes.func,\n  lockType: PropTypes.oneOf(['left', 'right'])\n}), _temp2);\nLockBody.displayName = 'LockBody';\nexport { LockBody as default };","map":null,"metadata":{},"sourceType":"module"}