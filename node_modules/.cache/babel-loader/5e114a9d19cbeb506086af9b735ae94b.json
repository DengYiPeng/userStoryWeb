{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Line from './progress-line';\nimport Circle from './progress-circle';\n/**\n * Progress\n */\n\nvar Progress = (_temp = _class = function (_Component) {\n  _inherits(Progress, _Component);\n\n  function Progress() {\n    _classCallCheck(this, Progress);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Progress.prototype.render = function render() {\n    var _props = this.props,\n        shape = _props.shape,\n        hasBorder = _props.hasBorder,\n        others = _objectWithoutProperties(_props, ['shape', 'hasBorder']);\n\n    return shape === 'circle' ? React.createElement(Circle, others) : React.createElement(Line, _extends({}, others, {\n      hasBorder: hasBorder\n    }));\n  };\n\n  return Progress;\n}(Component), _class.propTypes = {\n  prefix: PropTypes.string,\n\n  /**\n   * 形态\n   */\n  shape: PropTypes.oneOf(['circle', 'line']),\n\n  /**\n   * 尺寸\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * 所占百分比\n   */\n  percent: PropTypes.number,\n\n  /**\n   * 进度状态, 显示优先级: color > progressive > state\n   */\n  state: PropTypes.oneOf(['normal', 'success', 'error']),\n\n  /**\n   * 是否为色彩阶段变化模式, 显示优先级: color > progressive > state\n   */\n  progressive: PropTypes.bool,\n\n  /**\n   * 是否添加 Border（只适用于 Line Progress)\n   */\n  hasBorder: PropTypes.bool,\n\n  /**\n   * 文本渲染函数\n   * @param {Number} percent 当前的进度信息\n   * @param {Object} option 额外的参数\n   * @property {Boolean} option.rtl 是否在rtl 模式下渲染\n   * @return {ReactNode} 返回文本节点\n   */\n  textRender: PropTypes.func,\n\n  /**\n   * 进度条颜色, 显示优先级: color > progressive > state\n   */\n  color: PropTypes.string,\n\n  /**\n   * 背景色\n   */\n  backgroundColor: PropTypes.string,\n  rtl: PropTypes.bool\n}, _class.defaultProps = {\n  prefix: 'next-',\n  shape: 'line',\n  state: 'normal',\n  size: 'medium',\n  percent: 0,\n  progressive: false,\n  hasBorder: false,\n  textRender: function textRender(percent) {\n    return Math.floor(percent) + '%';\n  }\n}, _class.contextTypes = {\n  prefix: PropTypes.string\n}, _temp);\nProgress.displayName = 'Progress';\nexport { Progress as default };","map":null,"metadata":{},"sourceType":"module"}