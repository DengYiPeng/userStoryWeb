{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Menu from '../menu';\n/**\n * Nav.Group\n * @description 继承自 `Menu.Group` 的能力请查看 `Menu.Group` 文档\n */\n\nvar Group = (_temp = _class = function (_Component) {\n  _inherits(Group, _Component);\n\n  function Group() {\n    _classCallCheck(this, Group);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Group.prototype.render = function render() {\n    var _classNames;\n\n    var _context = this.context,\n        prefix = _context.prefix,\n        iconOnly = _context.iconOnly;\n\n    var _props = this.props,\n        className = _props.className,\n        children = _props.children,\n        label = _props.label,\n        others = _objectWithoutProperties(_props, ['className', 'children', 'label']);\n\n    var newLabel = label;\n\n    if (iconOnly) {\n      // TODO: add a group icon ?\n      newLabel = [React.createElement('span', {\n        key: 'icon',\n        className: prefix + 'nav-icon-placeholder'\n      }), React.createElement('span', {\n        key: 'label'\n      }, label)];\n    }\n\n    var cls = classNames((_classNames = {}, _classNames[prefix + 'nav-group-label'] = true, _classNames[className] = !!className, _classNames));\n    return React.createElement(Menu.Group, _extends({\n      className: cls,\n      label: newLabel\n    }, others), children);\n  };\n\n  return Group;\n}(Component), _class.menuChildType = 'group', _class.propTypes = {\n  /**\n   * 自定义类名\n   */\n  className: PropTypes.string,\n\n  /**\n   * 标签内容\n   */\n  label: PropTypes.node,\n\n  /**\n   * 导航项和子导航\n   */\n  children: PropTypes.node\n}, _class.contextTypes = {\n  prefix: PropTypes.string,\n  iconOnly: PropTypes.bool\n}, _temp);\nGroup.displayName = 'Group';\nexport default Group;","map":null,"metadata":{},"sourceType":"module"}