{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Button from '../button';\nimport Icon from '../icon';\nimport zhCN from '../locale/zh-cn';\nimport { func, obj, guid } from '../util';\nvar makeChain = func.makeChain;\nvar pickOthers = obj.pickOthers;\n\nvar noop = function noop() {};\n\nvar Inner = (_temp = _class = function (_Component) {\n  _inherits(Inner, _Component);\n\n  function Inner() {\n    _classCallCheck(this, Inner);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Inner.prototype.getNode = function getNode(name, ref) {\n    this[name] = ref;\n  };\n\n  Inner.prototype.renderHeader = function renderHeader() {\n    var _props = this.props,\n        prefix = _props.prefix,\n        title = _props.title;\n\n    if (title) {\n      this.titleId = guid('dialog-title-');\n      return React.createElement('div', {\n        className: prefix + 'dialog-header',\n        id: this.titleId,\n        ref: this.getNode.bind(this, 'headerNode')\n      }, title);\n    }\n\n    return null;\n  };\n\n  Inner.prototype.renderBody = function renderBody() {\n    var _props2 = this.props,\n        prefix = _props2.prefix,\n        children = _props2.children;\n\n    if (children) {\n      return React.createElement('div', {\n        className: prefix + 'dialog-body',\n        ref: this.getNode.bind(this, 'bodyNode')\n      }, children);\n    }\n\n    return null;\n  };\n\n  Inner.prototype.renderFooter = function renderFooter() {\n    var _cx,\n        _this2 = this;\n\n    var _props3 = this.props,\n        prefix = _props3.prefix,\n        footer = _props3.footer,\n        footerAlign = _props3.footerAlign,\n        footerActions = _props3.footerActions,\n        locale = _props3.locale;\n\n    if (footer === false) {\n      return null;\n    }\n\n    var newClassName = cx((_cx = {}, _cx[prefix + 'dialog-footer'] = true, _cx[prefix + 'align-' + footerAlign] = true, _cx));\n    var footerContent = footer === true || !footer ? footerActions.map(function (action) {\n      var btnProps = _this2.props[action + 'Props'];\n\n      var newBtnProps = _extends({}, btnProps, {\n        prefix: prefix,\n        className: cx(prefix + 'dialog-btn', btnProps.className),\n        onClick: makeChain(_this2.props['on' + (action[0].toUpperCase() + action.slice(1))], btnProps.onClick),\n        children: btnProps.children || locale[action]\n      });\n\n      if (action === 'ok') {\n        newBtnProps.type = 'primary';\n      }\n\n      return React.createElement(Button, _extends({\n        key: action\n      }, newBtnProps));\n    }) : footer;\n    return React.createElement('div', {\n      className: newClassName,\n      ref: this.getNode.bind(this, 'footerNode')\n    }, footerContent);\n  };\n\n  Inner.prototype.renderCloseLink = function renderCloseLink() {\n    var _props4 = this.props,\n        prefix = _props4.prefix,\n        closeable = _props4.closeable,\n        onClose = _props4.onClose;\n\n    if (closeable) {\n      return React.createElement('a', {\n        role: 'button',\n        href: 'javascript:;',\n        className: prefix + 'dialog-close',\n        onClick: onClose\n      }, React.createElement(Icon, {\n        className: prefix + 'dialog-close-icon',\n        type: 'close'\n      }));\n    }\n\n    return null;\n  };\n\n  Inner.prototype.render = function render() {\n    var _cx2;\n\n    var _props5 = this.props,\n        prefix = _props5.prefix,\n        className = _props5.className,\n        closeable = _props5.closeable,\n        title = _props5.title,\n        role = _props5.role,\n        rtl = _props5.rtl;\n    var others = pickOthers(Object.keys(Inner.propTypes), this.props);\n    var newClassName = cx((_cx2 = {}, _cx2[prefix + 'dialog'] = true, _cx2[prefix + 'closeable'] = closeable, _cx2[className] = !!className, _cx2));\n    var header = this.renderHeader();\n    var body = this.renderBody();\n    var footer = this.renderFooter();\n    var closeLink = this.renderCloseLink();\n    var ariaProps = {\n      role: role,\n      'aria-modal': 'true'\n    };\n\n    if (title) {\n      ariaProps['aria-labelledby'] = this.titleId;\n    }\n\n    return React.createElement('div', _extends({}, ariaProps, {\n      className: newClassName\n    }, others, {\n      dir: rtl ? 'rtl' : undefined\n    }), header, body, footer, closeLink);\n  };\n\n  return Inner;\n}(Component), _class.propTypes = {\n  prefix: PropTypes.string,\n  className: PropTypes.string,\n  title: PropTypes.node,\n  children: PropTypes.node,\n  footer: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  footerAlign: PropTypes.oneOf(['left', 'center', 'right']),\n  footerActions: PropTypes.array,\n  onOk: PropTypes.func,\n  onCancel: PropTypes.func,\n  okProps: PropTypes.object,\n  cancelProps: PropTypes.object,\n  closeable: PropTypes.bool,\n  onClose: PropTypes.func,\n  locale: PropTypes.object,\n  role: PropTypes.string,\n  rtl: PropTypes.bool\n}, _class.defaultProps = {\n  prefix: 'next-',\n  footerAlign: 'right',\n  footerActions: ['ok', 'cancel'],\n  onOk: noop,\n  onCancel: noop,\n  okProps: {},\n  cancelProps: {},\n  closeable: true,\n  onClose: noop,\n  locale: zhCN.Dialog,\n  role: 'dialog'\n}, _temp);\nInner.displayName = 'Inner';\nexport { Inner as default };","map":null,"metadata":{},"sourceType":"module"}