{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n/**\n * Menu.Divider\n * @order 6\n */\n\nvar Divider = (_temp = _class = function (_Component) {\n  _inherits(Divider, _Component);\n\n  function Divider() {\n    _classCallCheck(this, Divider);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Divider.prototype.render = function render() {\n    var _cx;\n\n    var _props = this.props,\n        root = _props.root,\n        className = _props.className,\n        others = _objectWithoutProperties(_props, ['root', 'className']);\n\n    var prefix = root.props.prefix;\n    var newClassName = cx((_cx = {}, _cx[prefix + 'menu-divider'] = true, _cx[className] = !!className, _cx));\n    return React.createElement('li', _extends({\n      role: 'separator',\n      className: newClassName\n    }, others));\n  };\n\n  return Divider;\n}(Component), _class.menuChildType = 'divider', _class.propTypes = {\n  root: PropTypes.object,\n  className: PropTypes.string\n}, _temp);\nDivider.displayName = 'Divider';\nexport { Divider as default };","map":null,"metadata":{},"sourceType":"module"}