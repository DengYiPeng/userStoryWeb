{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nvar TabContent = (_temp = _class = function (_PureComponent) {\n  _inherits(TabContent, _PureComponent);\n\n  function TabContent() {\n    _classCallCheck(this, TabContent);\n\n    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));\n  }\n\n  TabContent.prototype.render = function render() {\n    var _classnames;\n\n    var _props = this.props,\n        prefix = _props.prefix,\n        activeKey = _props.activeKey,\n        lazyLoad = _props.lazyLoad,\n        unmountInactiveTabs = _props.unmountInactiveTabs,\n        children = _props.children,\n        className = _props.className,\n        others = _objectWithoutProperties(_props, ['prefix', 'activeKey', 'lazyLoad', 'unmountInactiveTabs', 'children', 'className']);\n\n    var formatChildren = [];\n    React.Children.forEach(children, function (child) {\n      /* eslint-disable eqeqeq */\n      var active = activeKey == child.key;\n      formatChildren.push(React.cloneElement(child, {\n        prefix: prefix,\n        active: active,\n        lazyLoad: lazyLoad,\n        unmountInactiveTabs: unmountInactiveTabs\n      }));\n    });\n    var classNames = classnames((_classnames = {}, _classnames[prefix + 'tabs-content'] = true, _classnames), className);\n    return React.createElement('div', _extends({}, others, {\n      className: classNames\n    }), formatChildren);\n  };\n\n  return TabContent;\n}(PureComponent), _class.propTypes = {\n  prefix: PropTypes.string,\n  activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  lazyLoad: PropTypes.bool,\n  children: PropTypes.any\n}, _temp);\nexport default TabContent;","map":null,"metadata":{},"sourceType":"module"}