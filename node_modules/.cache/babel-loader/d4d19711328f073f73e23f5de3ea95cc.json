{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { dom } from '../util';\nimport HeaderComponent from './fixed/header';\nimport BodyComponent from './fixed/body';\nimport WrapperComponent from './fixed/wrapper';\nimport { statics } from './util';\nexport default function fixed(BaseComponent) {\n  var _class, _temp2;\n  /** Table */\n\n\n  var FixedTable = (_temp2 = _class = function (_React$Component) {\n    _inherits(FixedTable, _React$Component);\n\n    function FixedTable() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, FixedTable);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.getNode = function (type, node, lockType) {\n        lockType = lockType ? lockType.charAt(0).toUpperCase() + lockType.substr(1) : '';\n        _this['' + type + lockType + 'Node'] = node;\n\n        if (type === 'header' && !lockType) {\n          _this.innerHeaderNode = _this.headerNode.querySelector('div');\n        }\n      }, _this.onBodyScroll = function () {\n        _this.scrollTo(_this.bodyNode.scrollLeft, _this.bodyNode.scrollTop);\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    FixedTable.prototype.getChildContext = function getChildContext() {\n      return {\n        fixedHeader: this.props.fixedHeader,\n        maxBodyHeight: this.props.maxBodyHeight,\n        onBodyScroll: this.onBodyScroll,\n        getNode: this.getNode\n      };\n    };\n\n    FixedTable.prototype.componentDidMount = function componentDidMount() {\n      this.adjustFixedHeaderSize();\n    };\n\n    FixedTable.prototype.componentDidUpdate = function componentDidUpdate() {\n      this.adjustFixedHeaderSize();\n    };\n\n    FixedTable.prototype.adjustFixedHeaderSize = function adjustFixedHeaderSize() {\n      var _props = this.props,\n          hasHeader = _props.hasHeader,\n          fixedHeader = _props.fixedHeader,\n          maxBodyHeight = _props.maxBodyHeight;\n\n      if (hasHeader && fixedHeader && !this.props.lockType) {\n        if (this.bodyNode.scrollHeight <= maxBodyHeight) {\n          dom.setStyle(this.headerNode, 'paddingRight', 0);\n        } else {\n          dom.setStyle(this.headerNode, 'paddingRight', dom.scrollbar().width);\n        }\n      }\n    };\n\n    FixedTable.prototype.scrollTo = function scrollTo(x) {\n      if (this.innerHeaderNode) {\n        this.innerHeaderNode.scrollLeft = x;\n      }\n    };\n\n    FixedTable.prototype.render = function render() {\n      /* eslint-disable no-unused-vars, prefer-const */\n      var _props2 = this.props,\n          components = _props2.components,\n          className = _props2.className,\n          prefix = _props2.prefix,\n          fixedHeader = _props2.fixedHeader,\n          maxBodyHeight = _props2.maxBodyHeight,\n          others = _objectWithoutProperties(_props2, ['components', 'className', 'prefix', 'fixedHeader', 'maxBodyHeight']);\n\n      if (fixedHeader) {\n        var _classnames;\n\n        components = _extends({}, components);\n\n        if (!components.Header) {\n          components.Header = HeaderComponent;\n        }\n\n        if (!components.Body) {\n          components.Body = BodyComponent;\n        }\n\n        if (!components.Wrapper) {\n          components.Wrapper = WrapperComponent;\n        }\n\n        className = classnames((_classnames = {}, _classnames[prefix + 'table-fixed'] = true, _classnames[className] = className, _classnames));\n      }\n\n      return React.createElement(BaseComponent, _extends({}, others, {\n        components: components,\n        className: className,\n        prefix: prefix\n      }));\n    };\n\n    return FixedTable;\n  }(React.Component), _class.FixedHeader = HeaderComponent, _class.FixedBody = BodyComponent, _class.FixedWrapper = WrapperComponent, _class.propTypes = _extends({\n    /**\n      * 是否具有表头\n      */\n    hasHeader: PropTypes.bool,\n\n    /**\n      * 表头是否固定，该属性配合maxBodyHeight使用，当内容区域的高度超过maxBodyHeight的时候，在内容区域会出现滚动条\n      */\n    fixedHeader: PropTypes.bool,\n\n    /**\n     * 最大内容区域的高度,在`fixedHeader`为`true`的时候,超过这个高度会出现滚动条\n     */\n    maxBodyHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  }, BaseComponent.propTypes), _class.defaultProps = _extends({}, BaseComponent.defaultProps, {\n    hasHeader: true,\n    fixedHeader: false,\n    maxBodyHeight: 200,\n    components: {},\n    refs: {},\n    prefix: 'next-'\n  }), _class.childContextTypes = {\n    fixedHeader: PropTypes.bool,\n    maxBodyHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    onBodyScroll: PropTypes.func,\n    getNode: PropTypes.func\n  }, _temp2);\n  FixedTable.displayName = 'FixedTable';\n  statics(FixedTable, BaseComponent);\n  return FixedTable;\n}","map":null,"metadata":{},"sourceType":"module"}