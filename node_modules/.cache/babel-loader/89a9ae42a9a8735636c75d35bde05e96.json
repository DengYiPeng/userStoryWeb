{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ConfigProvider from '../../config-provider';\n/**\n * Button.Group\n */\n\nvar ButtonGroup = (_temp = _class = function (_Component) {\n  _inherits(ButtonGroup, _Component);\n\n  function ButtonGroup() {\n    _classCallCheck(this, ButtonGroup);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  ButtonGroup.prototype.render = function render() {\n    var _classNames;\n\n    var _props = this.props,\n        prefix = _props.prefix,\n        className = _props.className,\n        size = _props.size,\n        children = _props.children,\n        rtl = _props.rtl,\n        others = _objectWithoutProperties(_props, ['prefix', 'className', 'size', 'children', 'rtl']);\n\n    var groupCls = classNames((_classNames = {}, _classNames[prefix + 'btn-group'] = true, _classNames[className] = className, _classNames));\n    var cloneChildren = Children.map(children, function (child) {\n      if (child) {\n        return React.cloneElement(child, {\n          size: size\n        });\n      }\n    });\n\n    if (rtl) {\n      others.dir = 'rtl';\n    }\n\n    return React.createElement('div', _extends({}, others, {\n      className: groupCls\n    }), cloneChildren);\n  };\n\n  return ButtonGroup;\n}(Component), _class.propTypes = {\n  rtl: PropTypes.bool,\n  prefix: PropTypes.string,\n\n  /**\n   * 统一设置 Button 组件的按钮大小\n   */\n  size: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node\n}, _class.defaultProps = {\n  prefix: 'next-',\n  size: 'medium'\n}, _temp);\nButtonGroup.displayName = 'ButtonGroup';\nexport default ConfigProvider.config(ButtonGroup);","map":null,"metadata":{},"sourceType":"module"}