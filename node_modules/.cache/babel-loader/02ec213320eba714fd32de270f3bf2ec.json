{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport Html5Uploader from './html5-uploader';\nimport IframeUploader from './iframe-uploader';\n\nvar Uploader = function (_React$Component) {\n  _inherits(Uploader, _React$Component);\n\n  function Uploader() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Uploader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      Component: Html5Uploader\n    }, _this.saveUploaderRef = function (ref) {\n      _this.uploaderRef = ref;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Uploader.prototype.componentDidMount = function componentDidMount() {\n    if (typeof File === 'undefined') {\n      /* eslint react/no-did-mount-set-state:0 */\n      this.setState({\n        Component: IframeUploader\n      });\n    }\n  };\n\n  Uploader.prototype.abort = function abort(file) {\n    this.uploaderRef.abort(file);\n  };\n\n  Uploader.prototype.startUpload = function startUpload(files) {\n    this.uploaderRef.startUpload(files);\n  };\n\n  Uploader.prototype.render = function render() {\n    var Uploader = this.state.Component;\n    return React.createElement(Uploader, _extends({}, this.props, {\n      ref: this.saveUploaderRef\n    }));\n  };\n\n  return Uploader;\n}(React.Component);\n\nUploader.displayName = 'Uploader';\nexport { Uploader as default };","map":null,"metadata":{},"sourceType":"module"}