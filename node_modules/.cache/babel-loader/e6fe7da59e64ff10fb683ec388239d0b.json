{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * Table.Column\n * @order 0\n **/\n\nvar Column = (_temp = _class = function (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Column.prototype.render = function render() {\n    return null;\n  };\n\n  return Column;\n}(React.Component), _class.propTypes = {\n  /**\n   * 指定列对应的字段，支持`a.b`形式的快速取值\n   */\n  dataIndex: PropTypes.string,\n\n  /**\n   * 行渲染的逻辑\n   * value, rowIndex, record, context四个属性只可读不可被更改\n   * Function(value, index, record) => Element\n   */\n  cell: PropTypes.oneOfType([PropTypes.element, PropTypes.node, PropTypes.func]),\n\n  /**\n   * 表头显示的内容\n   * value, rowIndex, record, context四个属性只可读不可被更改\n   */\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.node, PropTypes.func]),\n\n  /**\n   * 是否支持排序\n   */\n  sortable: PropTypes.bool,\n\n  /**\n   * 列宽，注意在锁列的情况下一定需要配置宽度\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * 单元格的对齐方式\n   */\n  align: PropTypes.oneOf(['left', 'center', 'right']),\n\n  /**\n   * 生成标题过滤的菜单, 格式为`[{label:'xxx', value:'xxx'}]`\n   */\n  filters: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.node, PropTypes.string])\n  })),\n\n  /**\n   * 过滤的模式是单选还是多选\n   */\n  filterMode: PropTypes.oneOf(['single', 'multiple']),\n\n  /**\n   * 是否支持锁列,可选值为`left`,`right`, `true`\n   */\n  lock: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n\n  /**\n   * 是否支持列宽调整, 当该值设为true，table的布局方式会修改为fixed.\n   */\n  resizable: PropTypes.bool\n}, _class.contextTypes = {\n  parent: PropTypes.any\n}, _class.defaultProps = {\n  cell: function cell(value) {\n    return value;\n  },\n  filterMode: 'multiple',\n  resizable: false\n}, _class._typeMark = 'column', _temp);\nColumn.displayName = 'Column';\nexport { Column as default };","map":null,"metadata":{},"sourceType":"module"}