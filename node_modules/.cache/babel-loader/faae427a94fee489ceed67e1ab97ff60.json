{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp2;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { func } from '../../util';\nimport { uid } from '../util';\nvar noop = func.noop;\n/**\n * Upload.Selecter\n * @description [底层能力] 可自定义样式的文件选择器\n */\n\nvar Selecter = (_temp2 = _class = function (_React$Component) {\n  _inherits(Selecter, _React$Component);\n\n  function Selecter() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Selecter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onSelect = function (e) {\n      var files = e.target.files;\n      var filesArr = files.length ? Array.prototype.slice.call(files) : [files];\n      filesArr.forEach(function (file) {\n        file.uid = uid();\n      });\n\n      _this.props.onSelect(filesArr);\n    }, _this.onClick = function () {\n      var el = _this.fileRef;\n\n      if (!el) {\n        return;\n      }\n\n      el.click();\n      el.value = '';\n    }, _this.onKeyDown = function (e) {\n      if (e.key === 'Enter') {\n        _this.onClick();\n      }\n    }, _this.onDrop = function (e) {\n      e.preventDefault();\n      var files = e.dataTransfer.files;\n      var filesArr = Array.prototype.slice.call(files);\n\n      _this.props.onDrop(filesArr);\n    }, _this.onDragOver = function (e) {\n      e.preventDefault();\n\n      _this.props.onDragOver(e);\n    }, _this.saveFileRef = function (ref) {\n      _this.fileRef = ref;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * 点击上传按钮\n   * @return {void}\n   */\n\n  /**\n   * 键盘事件\n   * @param  {SyntheticEvent} e\n   * @return {void}\n   */\n\n  /**\n   * 拖拽\n   * @param  {SyntheticEvent} e\n   * @return {void}\n   */\n\n\n  Selecter.prototype.render = function render() {\n    var _props = this.props,\n        accept = _props.accept,\n        multiple = _props.multiple,\n        children = _props.children,\n        id = _props.id,\n        disabled = _props.disabled,\n        dragable = _props.dragable,\n        style = _props.style,\n        className = _props.className,\n        name = _props.name;\n    var events = {};\n\n    if (!disabled) {\n      events = _extends({\n        onClick: this.onClick,\n        onKeyDown: this.onKeyDown,\n        tabIndex: '0'\n      }, dragable ? {\n        onDrop: this.onDrop,\n        onDragOver: this.onDragOver,\n        onDragLeave: this.props.onDragLeave\n      } : {});\n    }\n\n    return React.createElement('div', _extends({\n      role: 'upload',\n      style: style,\n      className: className\n    }, events), React.createElement('input', {\n      type: 'file',\n      name: name,\n      id: id,\n      ref: this.saveFileRef,\n      style: {\n        display: 'none'\n      },\n      accept: accept,\n      'aria-hidden': true,\n      multiple: multiple,\n      onChange: this.onSelect,\n      disabled: disabled\n    }), children);\n  };\n\n  return Selecter;\n}(React.Component), _class.propTypes = {\n  id: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n\n  /**\n   * 是否禁用上传功能\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * 是否支持多选文件，`ie10+` 支持。开启后按住 ctrl 可选择多个文件\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * 是否支持拖拽上传，`ie10+` 支持。\n   */\n  dragable: PropTypes.bool,\n\n  /**\n   * 接受上传的文件类型 (image/png, image/jpg, .doc, .ppt) 详见 [input accept attribute](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-accept)\n   */\n  accept: PropTypes.string,\n\n  /**\n   * 文件选择回调\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * 拖拽经过回调\n   */\n  onDragOver: PropTypes.func,\n\n  /**\n   * 拖拽离开回调\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * 拖拽完成回调\n   */\n  onDrop: PropTypes.func,\n  children: PropTypes.node,\n  name: PropTypes.string\n}, _class.defaultProps = {\n  name: 'file',\n  multiple: false,\n  onSelect: noop,\n  onDragOver: noop,\n  onDragLeave: noop,\n  onDrop: noop\n}, _temp2);\nSelecter.displayName = 'Selecter';\nexport { Selecter as default };","map":null,"metadata":{},"sourceType":"module"}