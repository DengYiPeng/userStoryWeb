{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp2;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport FilterComponent from './filter';\nimport SortComponent from './sort';\nimport CellComponent from './cell';\nimport ResizeComponent from './resize';\n\nvar noop = function noop() {};\n\nvar Header = (_temp2 = _class = function (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.getCellRef = function (i, j, cell) {\n      _this.props.headerCellRef(i, j, cell);\n    }, _this.onSort = function (dataIndex, order, sort) {\n      _this.props.onSort(dataIndex, order, sort);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Header.prototype.render = function render() {\n    var _this2 = this;\n    /*eslint-disable no-unused-vars */\n\n\n    var _props = this.props,\n        prefix = _props.prefix,\n        className = _props.className,\n        children = _props.children,\n        Tag = _props.component,\n        colGroup = _props.colGroup,\n        columns = _props.columns,\n        locale = _props.locale,\n        filterParams = _props.filterParams,\n        onFilter = _props.onFilter,\n        components = _props.components,\n        affixRef = _props.affixRef,\n        headerCellRef = _props.headerCellRef,\n        onSort = _props.onSort,\n        sort = _props.sort,\n        onResizeChange = _props.onResizeChange,\n        pure = _props.pure,\n        others = _objectWithoutProperties(_props, ['prefix', 'className', 'children', 'component', 'colGroup', 'columns', 'locale', 'filterParams', 'onFilter', 'components', 'affixRef', 'headerCellRef', 'onSort', 'sort', 'onResizeChange', 'pure']);\n\n    var _components$Cell = components.Cell,\n        Cell = _components$Cell === undefined ? CellComponent : _components$Cell,\n        _components$Filter = components.Filter,\n        Filter = _components$Filter === undefined ? FilterComponent : _components$Filter,\n        _components$Sort = components.Sort,\n        Sort = _components$Sort === undefined ? SortComponent : _components$Sort,\n        _components$Resize = components.Resize,\n        Resize = _components$Resize === undefined ? ResizeComponent : _components$Resize;\n    var rowSpan = columns.length;\n    var header = columns.map(function (cols, index) {\n      var col = cols.map(function (col, j) {\n        var _classnames;\n        /* eslint-disable no-unused-vars, prefer-const */\n\n\n        var title = col.title,\n            colSpan = col.colSpan,\n            sortable = col.sortable,\n            resizable = col.resizable,\n            dataIndex = col.dataIndex,\n            filters = col.filters,\n            filterMode = col.filterMode,\n            width = col.width,\n            align = col.align,\n            className = col.className,\n            __normalized = col.__normalized,\n            lock = col.lock,\n            others = _objectWithoutProperties(col, ['title', 'colSpan', 'sortable', 'resizable', 'dataIndex', 'filters', 'filterMode', 'width', 'align', 'className', '__normalized', 'lock']);\n\n        className = classnames((_classnames = {}, _classnames[prefix + 'table-header-node'] = true, _classnames[prefix + 'table-header-resizable'] = resizable, _classnames[className] = className, _classnames));\n        var attrs = {},\n            sortElement = void 0,\n            filterElement = void 0,\n            resizeElement = void 0;\n\n        if (col.children && col.children.length) {\n          attrs.colSpan = colSpan;\n        } else {\n          if (sortable) {\n            sortElement = React.createElement(Sort, {\n              prefix: prefix,\n              dataIndex: dataIndex,\n              onSort: _this2.onSort,\n              sort: sort,\n              locale: locale\n            });\n          }\n\n          if (resizable) {\n            resizeElement = React.createElement(Resize, {\n              prefix: prefix,\n              dataIndex: dataIndex,\n              onChange: onResizeChange\n            });\n          }\n\n          if (filters) {\n            filterElement = filters.length ? React.createElement(Filter, {\n              dataIndex: dataIndex,\n              filters: filters,\n              prefix: prefix,\n              locale: locale,\n              filterParams: filterParams,\n              filterMode: filterMode,\n              onFilter: onFilter\n            }) : null;\n          }\n\n          attrs.rowSpan = rowSpan - index;\n        }\n\n        return React.createElement(Cell, _extends({}, others, attrs, {\n          key: j,\n          prefix: prefix,\n          pure: pure,\n          cell: title,\n          component: 'th',\n          align: align,\n          className: className,\n          ref: _this2.getCellRef.bind(_this2, index, j),\n          type: 'header'\n        }), sortElement, filterElement, resizeElement);\n      });\n      return React.createElement('tr', {\n        key: index\n      }, col);\n    });\n    return React.createElement(Tag, _extends({\n      className: className\n    }, others), header, children);\n  };\n\n  return Header;\n}(React.Component), _class.propTypes = {\n  children: PropTypes.any,\n  prefix: PropTypes.string,\n  pure: PropTypes.bool,\n  className: PropTypes.string,\n  component: PropTypes.string,\n  columns: PropTypes.array,\n  colGroup: PropTypes.object,\n  headerCellRef: PropTypes.func,\n  locale: PropTypes.object,\n  filterParams: PropTypes.object,\n  onFilter: PropTypes.func,\n  components: PropTypes.object,\n  sort: PropTypes.object,\n  onSort: PropTypes.func,\n  onResizeChange: PropTypes.func\n}, _class.defaultProps = {\n  component: 'thead',\n  columns: [],\n  headerCellRef: noop,\n  onFilter: noop,\n  components: {},\n  onSort: noop,\n  onResizeChange: noop\n}, _temp2);\nHeader.displayName = 'Header';\nexport { Header as default };","map":null,"metadata":{},"sourceType":"module"}