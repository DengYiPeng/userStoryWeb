{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp;\n/* eslint new-cap:0, no-unused-expressions:0 */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _asyncValidator = require('async-validator');\n\nvar _asyncValidator2 = _interopRequireDefault(_asyncValidator);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar REG_KEY = /\\[(['\"a-z_A-Z0-9]*)\\]|\\./gi;\nvar IceFormBinderWrapper = (_temp = _class = function (_Component) {\n  _inherits(IceFormBinderWrapper, _Component);\n\n  _createClass(IceFormBinderWrapper, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        getter: this.getter,\n        setter: this.setter,\n        addValidate: this.addValidate,\n        removeValidate: this.removeValidate,\n        getError: this.getError,\n        validate: this.validate\n      };\n    }\n  }]);\n\n  function IceFormBinderWrapper(props) {\n    _classCallCheck(this, IceFormBinderWrapper);\n\n    var _this = _possibleConstructorReturn(this, (IceFormBinderWrapper.__proto__ || Object.getPrototypeOf(IceFormBinderWrapper)).call(this, props));\n\n    _this.addValidate = function (path, rules, fieldDOM) {\n      _this.validateRules[path] = rules;\n      _this.validateRefs[path] = fieldDOM;\n    };\n\n    _this.removeValidate = function (path) {\n      delete _this.validateRules[path];\n      delete _this.validateRefs[path];\n    };\n\n    _this.getter = function (name) {\n      if (!name) {\n        throw new Error('The name attribute is required in <FormBinder> component');\n      }\n\n      var value = _this.state.value;\n      var arr = name.split(REG_KEY).filter(function (item) {\n        return !!item;\n      });\n      var result = arr.reduce(function (prev, curr, currIndex) {\n        if (!prev.errorName) {\n          var key = curr.replace(/[\\'\\\"]/gi, '');\n          prev.value = prev.value[key];\n\n          if (currIndex !== arr.length - 1) {\n            var currentValueType = Object.prototype.toString.call(prev.value);\n\n            if (/String|Number|Boolean|Null|Undefined/.test(currentValueType)) {\n              prev.errorName = curr;\n            }\n          }\n        }\n\n        return prev;\n      }, {\n        value: value,\n        errorName: null\n      });\n      return result.value;\n    };\n\n    _this.setter = function (name, newValue) {\n      var value = _this.state.value;\n      var arr = name.split(REG_KEY).filter(function (item) {\n        return !!item;\n      });\n      arr.reduce(function (prev, curr, currentIndex) {\n        if (arr.length === currentIndex + 1) {\n          prev[curr] = newValue;\n        }\n\n        return prev[curr];\n      }, value);\n\n      _this.setState({}, function () {\n        if (_this.props.onChange) {\n          _this.props.onChange(value);\n        }\n      });\n    };\n\n    _this.validate = function (name) {\n      var rules = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var validator = new _asyncValidator2.default(_defineProperty({}, name, rules));\n      validator.validate(_defineProperty({}, name, _this.getter(name)), function (errors) {\n        if (errors && errors.length > 0) {\n          _this.setState(function (state) {\n            var formErrors = state.errors.filter(function (error) {\n              return error.field !== errors[0].field;\n            });\n            Array.prototype.push.apply(formErrors, errors);\n            return {\n              errors: formErrors\n            };\n          });\n        } else {\n          _this.setState({\n            errors: _this.state.errors.filter(function (error) {\n              return error.field !== name;\n            })\n          });\n        }\n      });\n    };\n\n    _this.validateAll = function (cb) {\n      _this.validateFields(cb);\n    };\n\n    _this.validateFields = function (ns, opt, cb) {\n      var _getParams = (0, _utils.getParams)(ns, opt, cb),\n          names = _getParams.names,\n          callback = _getParams.callback,\n          options = _getParams.options;\n\n      var needValidateValues = {};\n      var needValidateRules = {};\n\n      if (Array.isArray(names)) {\n        Object.keys(_this.validateRules).forEach(function (name) {\n          if (names.includes(name)) {\n            needValidateRules[name] = _this.validateRules[name];\n          }\n        });\n      } else {\n        needValidateRules = _this.validateRules;\n      }\n\n      Object.keys(needValidateRules).forEach(function (name) {\n        needValidateValues[name] = _this.getter(name);\n      }); // 当数据不符合校验规则时，在 validator.validate 的回调函数中，就可以得到相应的错误信息\n      // https://github.com/yiminghe/async-validator#usage\n\n      var validator = new _asyncValidator2.default(needValidateRules);\n      validator.validate(needValidateValues, function (errors) {\n        // 校验时的回调\n        if (callback && typeof callback === 'function') {\n          callback(errors, _this.state.value);\n        } // 报错后滚动到对应的错误位置\n\n\n        if (_this.props.enableScrollErrorField && errors && errors.length > 0) {\n          // todo 默认定位到第一个，最好有报错动效\n          _this.validateRefs[errors[0].field].scrollIntoView && _this.validateRefs[errors[0].field].scrollIntoView();\n          window.scroll(window.scrollX, window.scrollY - _this.props.scrollErrorFieldTopOffset);\n        } // 表单域错误处理\n\n\n        if (errors) {\n          _this.setState({\n            errors: errors\n          });\n        } else {\n          _this.setState({\n            errors: []\n          });\n        }\n      });\n    };\n\n    _this.getError = function (path) {\n      var errors = _this.state.errors;\n\n      if (!errors.length) {\n        return [];\n      }\n\n      return errors.filter(function (error) {\n        return error.field === path;\n      });\n    };\n\n    _this.validateRules = {};\n    _this.validateRefs = {};\n    _this.state = {\n      value: props.value || {},\n      errors: []\n    };\n    return _this;\n  }\n\n  _createClass(IceFormBinderWrapper, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if ('value' in nextProps) {\n        this.setState({\n          value: nextProps.value || {}\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(_react2.default.Fragment, null, this.props.children);\n    }\n  }]);\n\n  return IceFormBinderWrapper;\n}(_react.Component), _class.displayName = 'IceFormBinderWrapper', _class.propTypes = {\n  /**\n   * 全局校验滚动到报错位置时，距离顶部的偏移值（适用于头部 fixed 的场景）\n   */\n  scrollErrorFieldTopOffset: _propTypes2.default.number,\n\n  /**\n   * 全局校验时，是否开启滚动到报错表单位置\n   */\n  enableScrollErrorField: _propTypes2.default.bool,\n\n  /**\n   * 当前表单的根 value 数据\n   */\n  value: _propTypes2.default.object,\n\n  /**\n   * 当前表单元素变更时触发 */\n  onChange: _propTypes2.default.func\n}, _class.defaultProps = {\n  value: {},\n  scrollErrorFieldTopOffset: 0,\n  enableScrollErrorField: false,\n  onChange: function onChange() {}\n}, _class.childContextTypes = {\n  getter: _propTypes2.default.func,\n  setter: _propTypes2.default.func,\n  getError: _propTypes2.default.func,\n  addValidate: _propTypes2.default.func,\n  removeValidate: _propTypes2.default.func,\n  validate: _propTypes2.default.func\n}, _temp);\nexports.default = IceFormBinderWrapper;","map":null,"metadata":{},"sourceType":"script"}