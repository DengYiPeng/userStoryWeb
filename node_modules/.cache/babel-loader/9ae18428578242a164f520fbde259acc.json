{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp2;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../button';\nimport { func, obj, log } from '../util';\n/**\n * Form.Submit\n * @description 继承 Button API\n * @order 2\n */\n\nvar Submit = (_temp2 = _class = function (_React$Component) {\n  _inherits(Submit, _React$Component);\n\n  function Submit() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Submit);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function () {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          validate = _this$props.validate;\n      var field = _this.context._formField || _this.props.field;\n\n      if (!field) {\n        log.warning('Form.Submit should be used in `Form`');\n        onClick();\n        return;\n      }\n\n      if (validate === true) {\n        field.validate(function (errors) {\n          onClick(field.getValues(), errors, field);\n        });\n      } else if (Array.isArray(validate)) {\n        field.validate(validate, function (errors) {\n          onClick(field.getValues(), errors, field);\n        });\n      } else {\n        onClick(field.getValues(), null, field);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Submit.prototype.render = function render() {\n    var children = this.props.children;\n    return React.createElement(Button, _extends({}, obj.pickOthers(Submit.propTypes, this.props), {\n      onClick: this.handleClick\n    }), children);\n  };\n\n  return Submit;\n}(React.Component), _class.propTypes = {\n  /**\n   * 点击提交后触发\n   * @param {Object} value 数据\n   * @param {Object} errors 错误数据\n   * @param {class} field 实例\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * 是否校验/需要校验的 name 数组\n   */\n  validate: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n\n  /**\n   * 自定义 field (在 Form 内不需要设置)\n   */\n  field: PropTypes.object,\n  children: PropTypes.node\n}, _class.defaultProps = {\n  onClick: func.noop\n}, _class.contextTypes = {\n  _formField: PropTypes.object\n}, _temp2);\nSubmit.displayName = 'Submit';\nexport default Submit;","map":null,"metadata":{},"sourceType":"module"}