{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp2;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Affix from '../../affix';\n/* eslint-disable react/prefer-stateless-function*/\n\nvar StickHeader = (_temp2 = _class = function (_React$Component) {\n  _inherits(StickHeader, _React$Component);\n\n  function StickHeader() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, StickHeader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.getAffixRef = function (ref) {\n      _this.props.affixRef && _this.props.affixRef(ref);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  StickHeader.prototype.render = function render() {\n    var _classnames;\n\n    var prefix = this.props.prefix;\n    var _context = this.context,\n        Header = _context.Header,\n        offsetTop = _context.offsetTop,\n        affixProps = _context.affixProps;\n    var newAffixProps = affixProps || {};\n\n    var className = newAffixProps.className,\n        others = _objectWithoutProperties(newAffixProps, ['className']);\n\n    var cls = classnames((_classnames = {}, _classnames[prefix + 'table-affix'] = true, _classnames.className = className, _classnames));\n    return React.createElement(Affix, _extends({\n      ref: this.getAffixRef\n    }, others, {\n      className: cls,\n      offsetTop: offsetTop\n    }), React.createElement(Header, this.props));\n  };\n\n  return StickHeader;\n}(React.Component), _class.propTypes = {\n  prefix: PropTypes.string\n}, _class.contextTypes = {\n  Header: PropTypes.any,\n  offsetTop: PropTypes.number,\n  affixProps: PropTypes.object\n}, _temp2);\nStickHeader.displayName = 'StickHeader';\nexport { StickHeader as default };","map":null,"metadata":{},"sourceType":"module"}