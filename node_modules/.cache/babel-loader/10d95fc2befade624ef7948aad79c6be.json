{"ast":null,"code":"function getCfgFromProps(props, type) {\n  if (type in props) {\n    return props[type];\n  }\n\n  return undefined;\n}\n\nfunction getRule(ruleName, props) {\n  var _ref;\n\n  return _ref = {}, _ref[ruleName] = props[ruleName], _ref.message = getCfgFromProps(props, ruleName + 'Message'), _ref.trigger = getCfgFromProps(props, ruleName + 'Trigger'), _ref;\n}\n\nfunction getValueName(props, displayName) {\n  if (props.valueName) {\n    return props.valueName;\n  }\n\n  if (typeof displayName === 'string') {\n    // Next Components are all wrappered by configProvider\n    var componentName = displayName.replace(/Config\\(/, '').replace(')', '');\n\n    if (['Switch', 'Checkbox', 'Radio'].indexOf(componentName) !== -1) {\n      return 'checked';\n    }\n  }\n\n  return 'value';\n}\n\nexport function getRules(props) {\n  var result = []; // required\n\n  if (props.required) {\n    result.push(getRule('required', props));\n  }\n\n  var maxLength = Number(props.maxLength);\n  var minLength = Number(props.minLength);\n\n  if (minLength || maxLength) {\n    result.push({\n      minLength: minLength,\n      maxLength: maxLength,\n      // minLengthMessage maxLengthMessage had been deprected, please use minmaxLength. TODO: removed in 2.0\n      message: getCfgFromProps(props, 'minmaxLengthMessage') || getCfgFromProps(props, 'minLengthMessage') || getCfgFromProps(props, 'maxLengthMessage'),\n      trigger: getCfgFromProps(props, 'minmaxLengthTrigger') || getCfgFromProps(props, 'minLengthTrigger') || getCfgFromProps(props, 'maxLengthTrigger')\n    });\n  } // length\n\n\n  if (props.length) {\n    result.push(getRule('length', props));\n  } // pattern\n\n\n  if (props.pattern) {\n    result.push(getRule('pattern', props));\n  } // format\n\n\n  if (['number', 'tel', 'url', 'email'].indexOf(props.format) > -1) {\n    result.push(getRule('format', props));\n  }\n\n  var max = Number(props.max);\n  var min = Number(props.min); // max min\n\n  if (max || min) {\n    result.push({\n      min: min,\n      max: max,\n      // minMessage maxMessage had been deprected, please use minmaxLength. TODO: removed in 2.0\n      message: getCfgFromProps(props, 'minmaxMessage') || getCfgFromProps(props, 'minMessage') || getCfgFromProps(props, 'maxMessage'),\n      trigger: getCfgFromProps(props, 'minmaxTrigger') || getCfgFromProps(props, 'minTrigger') || getCfgFromProps(props, 'maxTrigger')\n    });\n  }\n\n  if (props.validator && typeof props.validator === 'function') {\n    result.push({\n      validator: props.validator,\n      trigger: getCfgFromProps(props, 'validatorTrigger')\n    });\n  }\n\n  return result;\n}\nexport function getFieldInitCfg(props, displayName) {\n  return {\n    valueName: getValueName(props, displayName),\n    trigger: props.trigger ? props.trigger : 'onChange',\n    rules: getRules(props)\n  };\n}","map":null,"metadata":{},"sourceType":"module"}