{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component, Children } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { support, events, dom } from '../../util';\n\nvar getHeight = function getHeight(el) {\n  return dom.getStyle(el, 'height');\n};\n\nvar setHeight = function setHeight(el, height) {\n  return dom.setStyle(el, 'height', height);\n};\n/** Step */\n\n\nvar Step = (_temp = _class = function (_Component) {\n  _inherits(Step, _Component);\n\n  function Step(props, context) {\n    _classCallCheck(this, Step);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    _this._stepRefHandler = function (ref) {\n      _this.step = ref;\n    };\n\n    _this.state = {\n      parentWidth: 'auto',\n      parentHeight: 'auto'\n    };\n    _this.resize = _this.resize.bind(_this);\n    return _this;\n  }\n\n  Step.prototype.componentDidMount = function componentDidMount() {\n    /* istanbul ignore if */\n    if (!support.flex) {\n      this.resize();\n      events.on(window, 'resize', this.resize);\n    }\n\n    this.adjustHeight();\n  };\n\n  Step.prototype.componentWillReceiveProps = function componentWillReceiveProps(newProps) {\n    if ('current' in newProps) {\n      this.setState({\n        current: newProps.current\n      });\n    }\n  };\n\n  Step.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.adjustHeight();\n  };\n\n  Step.prototype.componentWillUnmount = function componentWillUnmount() {\n    /* istanbul ignore if */\n    if (!support.flex) {\n      events.off(window, 'resize', this.resize);\n    }\n  };\n\n  Step.prototype.adjustHeight = function adjustHeight() {\n    var _props = this.props,\n        shape = _props.shape,\n        direction = _props.direction,\n        prefix = _props.prefix,\n        labelPlacement = _props.labelPlacement;\n\n    if (shape !== 'arrow' && direction === 'horizontal' && labelPlacement === 'vertical') {\n      var step = ReactDOM.findDOMNode(this.step);\n      var height = Array.prototype.slice.call(step.getElementsByClassName(prefix + 'step-item')).reduce(function (ret, re) {\n        var itemHeight = getHeight(re) + getHeight(re.getElementsByClassName(prefix + 'step-item-body')[0]);\n        return Math.max(itemHeight, ret);\n      }, 0);\n      setHeight(step, height);\n    }\n  };\n\n  Step.prototype.resize = function resize() {\n    if (this.step) {\n      this.setState({\n        parentWidth: this.step.offsetWidth || 0,\n        parentHeight: this.step.offsetHeight || 0\n      });\n    }\n  };\n\n  Step.prototype._getValidChildren = function _getValidChildren(children) {\n    var result = [];\n    React.Children.forEach(children, function (child) {\n      if (React.isValidElement(child)) {\n        result.push(child);\n      }\n    });\n    return result;\n  };\n\n  Step.prototype.render = function render() {\n    var _classNames; // eslint-disable-next-line\n\n\n    var _props2 = this.props,\n        prefix = _props2.prefix,\n        locale = _props2.locale,\n        className = _props2.className,\n        current = _props2.current,\n        direction = _props2.direction,\n        labelPlacement = _props2.labelPlacement,\n        shape = _props2.shape,\n        children = _props2.children,\n        readOnly = _props2.readOnly,\n        animation = _props2.animation,\n        itemRender = _props2.itemRender,\n        rtl = _props2.rtl,\n        others = _objectWithoutProperties(_props2, ['prefix', 'locale', 'className', 'current', 'direction', 'labelPlacement', 'shape', 'children', 'readOnly', 'animation', 'itemRender', 'rtl']);\n\n    prefix = this.context.prefix || prefix;\n    var _state = this.state,\n        parentWidth = _state.parentWidth,\n        parentHeight = _state.parentHeight; // type不同对应的direction不同\n\n    direction = shape === 'arrow' ? 'horizontal' : direction; // children去除null\n\n    children = this._getValidChildren(children); // 修改子节点属性\n\n    var cloneChildren = Children.map(children, function (child, index) {\n      var status = index < current ? 'finish' : index === current ? 'process' : 'wait';\n      return React.cloneElement(child, {\n        prefix: prefix,\n        key: index,\n        index: index,\n        total: children.length,\n        status: child.props.status || status,\n        shape: shape,\n        direction: direction,\n        labelPlacement: labelPlacement,\n        parentWidth: parentWidth,\n        parentHeight: parentHeight,\n        readOnly: readOnly,\n        animation: animation,\n        itemRender: child.props.itemRender ? child.props.itemRender : itemRender // 优先使用Item的itemRender\n\n      });\n    });\n    var stepCls = classNames((_classNames = {}, _classNames[prefix + 'step'] = true, _classNames[prefix + 'step-' + shape] = shape, _classNames[prefix + 'step-' + direction] = direction, _classNames[prefix + 'step-label-' + labelPlacement] = labelPlacement, _classNames[className] = className, _classNames));\n\n    if (rtl) {\n      others.dir = 'rtl';\n    }\n\n    return React.createElement('div', _extends({}, others, {\n      className: stepCls,\n      ref: this._stepRefHandler\n    }), cloneChildren);\n  };\n\n  return Step;\n}(Component), _class.propTypes = {\n  prefix: PropTypes.string,\n  rtl: PropTypes.bool,\n\n  /**\n   * 当前步骤\n   */\n  current: PropTypes.number,\n\n  /**\n   * 展示方向\n   */\n  direction: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * 横向布局时的内容排列\n   */\n  labelPlacement: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * 类型\n   */\n  shape: PropTypes.oneOf(['circle', 'arrow', 'dot']),\n\n  /**\n   * 是否只读模式\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * 是否开启动效\n   */\n  animation: PropTypes.bool,\n\n  /**\n   * 自定义样式名\n   */\n  className: PropTypes.string,\n\n  /**\n   * StepItem 的自定义渲染\n   * @param {Number} index   节点索引\n   * @param {String} status  节点状态\n   * @returns {Node} 节点的渲染结果\n   */\n  itemRender: PropTypes.func\n}, _class.defaultProps = {\n  prefix: 'next-',\n  current: 0,\n  direction: 'horizontal',\n  labelPlacement: 'vertical',\n  shape: 'circle',\n  animation: true,\n  itemRender: null\n}, _class.contextTypes = {\n  prefix: PropTypes.string\n}, _temp);\nStep.displayName = 'Step';\nexport { Step as default };","map":null,"metadata":{},"sourceType":"module"}