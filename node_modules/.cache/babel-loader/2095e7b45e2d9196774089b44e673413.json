{"ast":null,"code":"import ConfigProvider from '../config-provider';\nimport { log } from '../util';\nimport Tag from './tag';\nimport Group from './tag-group';\nimport Selectable from './selectable';\nimport Closable from './closeable';\n/* istanbul ignore next */\n\nvar ConfigTag = ConfigProvider.config(Tag, {\n  transfrom: function transfrom(props, deprecated) {\n    var shape = props.shape,\n        type = props.type;\n\n    if (shape === 'selectable') {\n      deprecated('shape=selectable', 'Tag.Selectable', 'Tag');\n    }\n\n    if (shape === 'deletable') {\n      deprecated('shape=deletable', 'Tag.Closeable', 'Tag');\n    }\n\n    if (shape === 'link') {\n      deprecated('shape=link', '<Tag><a href=\"x\">x</a></Tag>', 'Tag');\n    }\n\n    if (shape === 'readonly' || shape === 'interactive') {\n      log.warning('Warning: [ shape=' + shape + ' ] is deprecated at [ Tag ]');\n    }\n\n    if (type === 'secondary') {\n      log.warning('Warning: [ type=secondary ] is deprecated at [ Tag ]');\n    }\n\n    ['count', 'marked', 'value', 'onChange'].forEach(function (key) {\n      if (key in props) {\n        log.warning('Warning: [ ' + key + ' ] is deprecated at [ Tag ]');\n      }\n    });\n\n    if ('selected' in props || 'defaultSelected' in props) {\n      log.warning('Warning: [ selected|defaultSelected  ] is deprecated at [ Tag ], use [ checked|defaultChecked ] at [ Tag.Selectable ] instead of it');\n    }\n\n    if ('closed' in props) {\n      log.warning('Warning: [ closed  ] is deprecated at [ Tag ], use [ onClose ] at [ Tag.Closeable ] instead of it');\n    }\n\n    if ('onSelect' in props) {\n      deprecated('onSelect', '<Tag.Selectable onChange/>', 'Tag');\n    }\n\n    if ('afterClose' in props) {\n      log.warning('Warning: [ afterClose  ] is deprecated at [ Tag ], use [ afterClose ] at [ Tag.Closeable ] instead of it');\n    }\n\n    return props;\n  }\n});\nConfigTag.Group = ConfigProvider.config(Group);\nConfigTag.Selectable = ConfigProvider.config(Selectable); // 有的地方叫做 Closeable 有的地方用Closeable, 为了保持兼容 文档类出现 Closeable, Closeable可以继续用\n\nConfigTag.Closable = ConfigProvider.config(Closable);\nConfigTag.Closeable = ConfigTag.Closable;\nexport default ConfigTag;","map":null,"metadata":{},"sourceType":"module"}