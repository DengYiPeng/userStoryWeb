{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ConfigProvider from '../config-provider';\nimport { obj } from '../util';\nimport Sup from './sup';\n/**\n * Badge\n */\n\nvar Badge = (_temp = _class = function (_Component) {\n  _inherits(Badge, _Component);\n\n  function Badge() {\n    _classCallCheck(this, Badge);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Badge.prototype.render = function render() {\n    var _classNames;\n\n    var _props = this.props,\n        prefix = _props.prefix,\n        dot = _props.dot,\n        className = _props.className,\n        children = _props.children,\n        content = _props.content,\n        style = _props.style,\n        originCount = _props.count,\n        originOverflowCount = _props.overflowCount;\n    var count = parseInt(originCount, 10);\n    var overflowCount = parseInt(originOverflowCount, 10);\n    var others = obj.pickOthers(Badge.propTypes, this.props); // 如果是数字，则添加默认的 title\n\n    if (count) {\n      others.title = others.title || '' + count;\n    }\n\n    var classes = classNames(prefix + 'badge', (_classNames = {}, _classNames[prefix + 'badge-not-a-wrapper'] = !children, _classNames), className);\n    return React.createElement('span', _extends({\n      className: classes\n    }, others), children, React.createElement(Sup, {\n      prefix: prefix,\n      content: content,\n      count: count,\n      overflowCount: overflowCount,\n      dot: dot,\n      style: style\n    }));\n  };\n\n  return Badge;\n}(Component), _class.propTypes = {\n  // 样式类名的品牌前缀\n  prefix: PropTypes.string,\n  // 自定义类名\n  className: PropTypes.string,\n  // 自定义内联样式\n  style: PropTypes.object,\n\n  /**\n   * 徽章依托的内容\n   */\n  children: PropTypes.node,\n\n  /**\n   * 展示的数字，大于 overflowCount 时显示为 ${overflowCount}+，为 0 时隐藏\n   */\n  count: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * 自定义节点内容\n   */\n  content: PropTypes.node,\n\n  /**\n   * 展示的封顶的数字\n   */\n  overflowCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * 不展示数字，只展示一个小红点\n   */\n  dot: PropTypes.bool\n}, _class.defaultProps = {\n  prefix: 'next-',\n  count: 0,\n  overflowCount: 99,\n  dot: false\n}, _temp);\nBadge.displayName = 'Badge';\nexport default ConfigProvider.config(Badge);","map":null,"metadata":{},"sourceType":"module"}