{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Menu from '../menu';\nimport Icon from '../icon';\n/**\n * Nav.SubNav\n * @description 继承自 `Menu.SubMenu` 的能力请查看 `Menu.SubMenu` 文档\n */\n\nvar SubNav = (_temp = _class = function (_Component) {\n  _inherits(SubNav, _Component);\n\n  function SubNav() {\n    _classCallCheck(this, SubNav);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  SubNav.prototype.render = function render() {\n    var _classNames;\n\n    var _context = this.context,\n        prefix = _context.prefix,\n        iconOnly = _context.iconOnly,\n        hasArrow = _context.hasArrow,\n        mode = _context.mode;\n\n    var _props = this.props,\n        className = _props.className,\n        icon = _props.icon,\n        label = _props.label,\n        children = _props.children,\n        others = _objectWithoutProperties(_props, ['className', 'icon', 'label', 'children']);\n\n    var cls = classNames((_classNames = {}, _classNames[prefix + 'nav-sub-nav-item'] = true, _classNames[className] = !!className, _classNames));\n    var iconEl = typeof icon === 'string' ? React.createElement(Icon, {\n      className: prefix + 'nav-icon',\n      type: icon\n    }) : icon;\n\n    if (iconOnly) {\n      if (hasArrow) {\n        iconEl = React.createElement(Icon, {\n          className: prefix + 'nav-icon-only-arrow',\n          type: mode === 'popup' ? 'arrow-right' : 'arrow-down'\n        });\n      } else if (!iconEl) {\n        iconEl = React.createElement('span', {\n          className: prefix + 'nav-icon-placeholder'\n        });\n      }\n    }\n\n    var newLabel = [iconEl ? cloneElement(iconEl, {\n      key: 'icon'\n    }) : null, React.createElement('span', {\n      key: 'label'\n    }, label)];\n    return React.createElement(Menu.SubMenu, _extends({\n      className: cls,\n      label: newLabel\n    }, others), children);\n  };\n\n  return SubNav;\n}(Component), _class.menuChildType = 'submenu', _class.propTypes = {\n  /**\n   * 自定义类名\n   */\n  className: PropTypes.string,\n\n  /**\n   * 自定义图标，可以使用 Icon 的 type，也可以使用组件 `<Icon type=\"your type\" />`\n   */\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * 标签内容\n   */\n  label: PropTypes.node,\n\n  /**\n   * 是否可选\n   */\n  selectable: PropTypes.bool,\n\n  /**\n   * 导航项和子导航\n   */\n  children: PropTypes.node\n}, _class.defaultProps = {\n  selectable: false\n}, _class.contextTypes = {\n  prefix: PropTypes.string,\n  mode: PropTypes.string,\n  iconOnly: PropTypes.bool,\n  hasArrow: PropTypes.bool\n}, _temp);\nSubNav.displayName = 'SubNav';\nexport default SubNav;","map":null,"metadata":{},"sourceType":"module"}