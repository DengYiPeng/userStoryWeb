{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport Menu from '../menu';\nimport VirtualList from '../virtual-list';\nvar CascaderMenu = (_temp = _class = function (_Component) {\n  _inherits(CascaderMenu, _Component);\n\n  function CascaderMenu() {\n    _classCallCheck(this, CascaderMenu);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  CascaderMenu.prototype.componentDidMount = function componentDidMount() {\n    this.scrollToSelectedItem();\n  };\n\n  CascaderMenu.prototype.scrollToSelectedItem = function scrollToSelectedItem() {\n    var _props = this.props,\n        prefix = _props.prefix,\n        useVirtual = _props.useVirtual,\n        children = _props.children;\n\n    if (!children || children.length === 0) {\n      return;\n    }\n\n    var selectedIndex = children.findIndex(function (item) {\n      return !!item.props.checked || !!item.props.selected || !!item.props.expanded;\n    });\n\n    if (selectedIndex === -1) {\n      return;\n    }\n\n    if (useVirtual) {\n      var instance = this.refs.virtual.getInstance();\n      setTimeout(function () {\n        return instance.scrollTo(selectedIndex);\n      }, 0);\n    } else {\n      var itemSelector = '.' + prefix + 'menu-item';\n      var menu = findDOMNode(this.refs.menu);\n      var targetItem = menu.querySelectorAll(itemSelector)[selectedIndex];\n\n      if (targetItem) {\n        menu.scrollTop = targetItem.offsetTop - Math.floor((menu.clientHeight / targetItem.clientHeight - 1) / 2) * targetItem.clientHeight;\n      }\n    }\n  };\n\n  CascaderMenu.prototype.renderMenu = function renderMenu(items, ref, props) {\n    return React.createElement(Menu, _extends({\n      ref: ref,\n      role: 'listbox'\n    }, props), items);\n  };\n\n  CascaderMenu.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props2 = this.props,\n        prefix = _props2.prefix,\n        useVirtual = _props2.useVirtual,\n        className = _props2.className,\n        style = _props2.style,\n        children = _props2.children,\n        others = _objectWithoutProperties(_props2, ['prefix', 'useVirtual', 'className', 'style', 'children']);\n\n    var menuProps = _extends({\n      labelToggleChecked: false,\n      className: prefix + 'cascader-menu'\n    }, others);\n\n    return React.createElement('div', {\n      ref: 'menu',\n      className: prefix + 'cascader-menu-wrapper ' + (className ? className : ''),\n      style: style\n    }, useVirtual ? React.createElement(VirtualList, {\n      ref: 'virtual',\n      itemsRenderer: function itemsRenderer(items, ref) {\n        return _this2.renderMenu(items, ref, menuProps);\n      }\n    }, children) : this.renderMenu(children, undefined, menuProps));\n  };\n\n  return CascaderMenu;\n}(Component), _class.propTypes = {\n  prefix: PropTypes.string,\n  className: PropTypes.string,\n  useVirtual: PropTypes.bool,\n  children: PropTypes.node\n}, _temp);\nCascaderMenu.displayName = 'CascaderMenu';\nexport { CascaderMenu as default };","map":null,"metadata":{},"sourceType":"module"}