{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { inRange, getPercent } from '../utils';\nvar Mark = (_temp = _class = function (_React$Component) {\n  _inherits(Mark, _React$Component);\n\n  function Mark() {\n    _classCallCheck(this, Mark);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Mark.prototype._renderItems = function _renderItems() {\n    var _props = this.props,\n        min = _props.min,\n        max = _props.max,\n        value = _props.value,\n        prefix = _props.prefix,\n        marks = _props.marks;\n    var items = [];\n    Object.keys(marks).forEach(function (mark, i) {\n      var _classNames;\n\n      var classes = classNames((_classNames = {}, _classNames[prefix + 'range-mark-text'] = true, _classNames.activated = inRange(mark, value, min), _classNames));\n      var left = getPercent(min, max, mark) + '%';\n      items.push( // \"key\" is for https://fb.me/react-warning-keys\n      React.createElement('span', {\n        className: classes,\n        style: {\n          left: left\n        },\n        key: i\n      }, marks[mark]));\n    });\n    return items;\n  };\n\n  Mark.prototype.render = function render() {\n    var _classNames2;\n\n    var _props2 = this.props,\n        prefix = _props2.prefix,\n        marksPosition = _props2.marksPosition;\n    var className = marksPosition === 'above' ? prefix + 'range-mark-above' : prefix + 'range-mark-below';\n    var classes = classNames(className, (_classNames2 = {}, _classNames2[prefix + 'range-mark'] = true, _classNames2));\n\n    var items = this._renderItems();\n\n    return React.createElement('div', {\n      className: classes\n    }, items);\n  };\n\n  return Mark;\n}(React.Component), _class.propTypes = {\n  min: PropTypes.number,\n  max: PropTypes.number,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  prefix: PropTypes.string,\n  marks: PropTypes.object,\n  marksPosition: PropTypes.string\n}, _class.defaultProps = {\n  prefix: 'next-',\n  min: 0,\n  max: 100,\n  value: 0,\n  marksPosition: ''\n}, _temp);\nMark.displayName = 'Mark';\nexport { Mark as default };","map":null,"metadata":{},"sourceType":"module"}