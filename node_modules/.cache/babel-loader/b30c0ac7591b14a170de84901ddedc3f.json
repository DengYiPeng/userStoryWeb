{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { obj } from '../../util';\nvar Cell = (_temp = _class = function (_React$Component) {\n  _inherits(Cell, _React$Component);\n\n  function Cell() {\n    _classCallCheck(this, Cell);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Cell.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    if (nextProps.pure) {\n      var isEqual = obj.shallowEqual(this.props, nextProps);\n      return !isEqual;\n    }\n\n    return true;\n  };\n\n  Cell.prototype.render = function render() {\n    var _classnames;\n    /* eslint-disable no-unused-vars */\n\n\n    var _props = this.props,\n        prefix = _props.prefix,\n        className = _props.className,\n        cell = _props.cell,\n        value = _props.value,\n        resizable = _props.resizable,\n        colIndex = _props.colIndex,\n        rowIndex = _props.rowIndex,\n        record = _props.record,\n        context = _props.context,\n        align = _props.align,\n        _props$style = _props.style,\n        style = _props$style === undefined ? {} : _props$style,\n        Tag = _props.component,\n        children = _props.children,\n        title = _props.title,\n        width = _props.width,\n        innerStyle = _props.innerStyle,\n        primaryKey = _props.primaryKey,\n        __normalized = _props.__normalized,\n        filterMode = _props.filterMode,\n        filters = _props.filters,\n        sortable = _props.sortable,\n        lock = _props.lock,\n        pure = _props.pure,\n        others = _objectWithoutProperties(_props, ['prefix', 'className', 'cell', 'value', 'resizable', 'colIndex', 'rowIndex', 'record', 'context', 'align', 'style', 'component', 'children', 'title', 'width', 'innerStyle', 'primaryKey', '__normalized', 'filterMode', 'filters', 'sortable', 'lock', 'pure']);\n\n    var tagStyle = _extends({}, style);\n\n    var cellProps = {\n      value: value,\n      index: rowIndex,\n      record: record,\n      context: context\n    };\n    var content = cell;\n\n    if (React.isValidElement(content)) {\n      content = React.cloneElement(content, cellProps);\n    } else if (typeof content === 'function') {\n      content = content(value, rowIndex, record, context);\n    }\n\n    if (align) {\n      tagStyle.textAlign = align;\n    }\n\n    var cls = classnames((_classnames = {}, _classnames[prefix + 'table-cell'] = true, _classnames[className] = className, _classnames));\n    return React.createElement(Tag, _extends({}, others, {\n      className: cls,\n      style: tagStyle,\n      role: 'gridcell'\n    }), React.createElement('div', {\n      className: prefix + 'table-cell-wrapper',\n      style: innerStyle\n    }, content, children));\n  };\n\n  return Cell;\n}(React.Component), _class.propTypes = {\n  prefix: PropTypes.string,\n  pure: PropTypes.bool,\n  primaryKey: PropTypes.string,\n  className: PropTypes.string,\n  record: PropTypes.any,\n  value: PropTypes.any,\n  colIndex: PropTypes.number,\n  rowIndex: PropTypes.number,\n  title: PropTypes.any,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  context: PropTypes.any,\n  cell: PropTypes.oneOfType([PropTypes.element, PropTypes.node, PropTypes.func]),\n  align: PropTypes.oneOf(['left', 'center', 'right']),\n  component: PropTypes.oneOf(['td', 'th', 'div']),\n  children: PropTypes.any,\n  style: PropTypes.object,\n  innerStyle: PropTypes.object,\n  filterMode: PropTypes.oneOf(['single', 'multiple']),\n  filters: PropTypes.array,\n  sortable: PropTypes.bool,\n  lock: PropTypes.any,\n  type: PropTypes.oneOf(['header', 'body']),\n  resizable: PropTypes.bool,\n  __normalized: PropTypes.bool\n}, _class.defaultProps = {\n  component: 'td',\n  type: 'body',\n  cell: function cell(value) {\n    return value;\n  },\n  prefix: 'next-'\n}, _temp);\nCell.displayName = 'Cell';\nexport { Cell as default };","map":null,"metadata":{},"sourceType":"module"}