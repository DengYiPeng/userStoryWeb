{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Menu from '../menu';\nimport Icon from '../icon';\nimport Balloon from '../balloon';\nvar Tooltip = Balloon.Tooltip;\n/**\n * Nav.Item\n * @description 继承自 `Menu.Item` 的能力请查看 `Menu.Item` 文档\n */\n\nvar Item = (_temp = _class = function (_Component) {\n  _inherits(Item, _Component);\n\n  function Item() {\n    _classCallCheck(this, Item);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Item.prototype.render = function render() {\n    var _context = this.context,\n        prefix = _context.prefix,\n        iconOnly = _context.iconOnly,\n        hasTooltip = _context.hasTooltip;\n\n    var _props = this.props,\n        icon = _props.icon,\n        children = _props.children,\n        others = _objectWithoutProperties(_props, ['icon', 'children']);\n\n    var iconEl = typeof icon === 'string' ? React.createElement(Icon, {\n      className: prefix + 'nav-icon',\n      type: icon\n    }) : icon;\n\n    if (iconOnly && !iconEl) {\n      iconEl = React.createElement('span', {\n        className: prefix + 'nav-icon-placeholder'\n      });\n    }\n\n    var item = React.createElement(Menu.Item, others, iconEl, children);\n\n    if (iconOnly && hasTooltip && others.parentMode !== 'popup') {\n      return React.createElement(Tooltip, {\n        align: 'r',\n        trigger: item\n      }, children);\n    }\n\n    return item;\n  };\n\n  return Item;\n}(Component), _class.menuChildType = 'item', _class.propTypes = {\n  /**\n   * 自定义图标，可以使用 Icon 的 type，也可以使用组件 `<Icon type=\"icon type\" />`\n   */\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * 导航内容\n   */\n  children: PropTypes.node,\n  parentMode: PropTypes.oneOf(['inline', 'popup'])\n}, _class.contextTypes = {\n  prefix: PropTypes.string,\n  iconOnly: PropTypes.bool,\n  hasTooltip: PropTypes.bool\n}, _temp);\nItem.displayName = 'Item';\nexport default Item;","map":null,"metadata":{},"sourceType":"module"}