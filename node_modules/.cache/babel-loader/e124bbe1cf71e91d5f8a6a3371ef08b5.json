{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp2;\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ConfigProvider from '../config-provider';\nimport Message from '../message';\nimport zhCN from '../locale/zh-cn';\nimport dialog from './dialog';\nvar Dialog = ConfigProvider.config(dialog);\n\nvar noop = function noop() {};\n\nvar MESSAGE_TYPE = {\n  alert: 'warning',\n  confirm: 'help'\n};\nvar Modal = (_temp2 = _class = function (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      visible: true,\n      loading: false\n    }, _this.close = function () {\n      _this.setState({\n        visible: false\n      });\n    }, _this.loading = function (loading) {\n      _this.setState({\n        loading: loading\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Modal.prototype.wrapper = function wrapper(fn, callback) {\n    var _this2 = this;\n\n    return function () {\n      var res = fn();\n\n      if (res && res.then) {\n        _this2.loading(true);\n\n        res.then(function (result) {\n          _this2.loading(false);\n\n          if (result !== false) {\n            callback();\n          }\n        }).catch(function () {\n          _this2.loading(false);\n        });\n      } else if (res !== false) {\n        callback();\n      }\n    };\n  };\n\n  Modal.prototype.render = function render() {\n    var _props = this.props,\n        prefix = _props.prefix,\n        type = _props.type,\n        title = _props.title,\n        content = _props.content,\n        messageProps = _props.messageProps,\n        footerActions = _props.footerActions,\n        onOk = _props.onOk,\n        onCancel = _props.onCancel,\n        onClose = _props.onClose,\n        okProps = _props.okProps,\n        needWrapper = _props.needWrapper,\n        rtl = _props.rtl,\n        others = _objectWithoutProperties(_props, ['prefix', 'type', 'title', 'content', 'messageProps', 'footerActions', 'onOk', 'onCancel', 'onClose', 'okProps', 'needWrapper', 'rtl']);\n\n    var newTitle = needWrapper && type ? null : title;\n    var newContent = needWrapper && type ? React.createElement(Message, _extends({\n      size: 'large',\n      shape: 'addon',\n      type: MESSAGE_TYPE[type]\n    }, messageProps, {\n      title: title,\n      rtl: rtl,\n      className: cx(prefix + 'dialog-message', messageProps.className)\n    }), content) : content;\n    var newFooterActions = footerActions || (type === 'alert' ? ['ok'] : type === 'confirm' ? ['ok', 'cancel'] : undefined);\n    var newOnOk = this.wrapper(onOk, this.close);\n    var newOnCancel = this.wrapper(onCancel, this.close);\n    var newOnClose = this.wrapper(onClose, this.close);\n    var _state = this.state,\n        visible = _state.visible,\n        loading = _state.loading;\n    okProps.loading = loading;\n    return React.createElement(Dialog, _extends({\n      role: 'alertdialog'\n    }, others, {\n      visible: visible,\n      title: newTitle,\n      rtl: rtl,\n      footerActions: newFooterActions,\n      onOk: this.state.loading ? noop : newOnOk,\n      onCancel: newOnCancel,\n      onClose: newOnClose,\n      okProps: okProps\n    }), newContent);\n  };\n\n  return Modal;\n}(Component), _class.propTypes = {\n  prefix: PropTypes.string,\n  pure: PropTypes.bool,\n  rtl: PropTypes.bool,\n  type: PropTypes.string,\n  title: PropTypes.node,\n  content: PropTypes.node,\n  messageProps: PropTypes.object,\n  footerActions: PropTypes.array,\n  onOk: PropTypes.func,\n  onCancel: PropTypes.func,\n  onClose: PropTypes.func,\n  okProps: PropTypes.object,\n  locale: PropTypes.object,\n  needWrapper: PropTypes.bool\n}, _class.defaultProps = {\n  prefix: 'next-',\n  pure: false,\n  messageProps: {},\n  onOk: noop,\n  onCancel: noop,\n  onClose: noop,\n  okProps: {},\n  locale: zhCN.Dialog,\n  needWrapper: true\n}, _temp2);\nModal.displayName = 'Modal';\nvar ConfigModal = ConfigProvider.config(Modal, {\n  componentName: 'Dialog'\n});\n/**\n * 创建对话框\n * @exportName show\n * @param {Object} config 配置项\n * @returns {Object} \b包含有 hide 方法，可用来关闭对话框\n */\n\nexport var show = function show() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var container = document.createElement('div');\n\n  var unmount = function unmount() {\n    if (config.afterClose) {\n      config.afterClose();\n    }\n\n    ReactDOM.unmountComponentAtNode(container);\n    container.parentNode.removeChild(container);\n  };\n\n  document.body.appendChild(container);\n  var newContext = ConfigProvider.getContext();\n  var instance = void 0,\n      myRef = void 0;\n  ReactDOM.render(React.createElement(ConfigProvider, newContext, React.createElement(ConfigModal, _extends({}, config, {\n    afterClose: unmount,\n    ref: function ref(_ref) {\n      myRef = _ref;\n    }\n  }))), container, function () {\n    instance = myRef;\n  });\n  return {\n    hide: function hide() {\n      var inc = instance && instance.getInstance();\n      inc && inc.close();\n    }\n  };\n};\n\nvar methodFactory = function methodFactory(type) {\n  return function () {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    config.type = type;\n    return show(config);\n  };\n};\n/**\n * 创建警示对话框\n * @exportName alert\n * @param {Object} config 配置项\n * @returns {Object} \b包含有 hide 方法，可用来关闭对话框\n */\n\n\nexport var alert = methodFactory('alert');\n/**\n * 创建确认对话框\n * @exportName confirm\n * @param {Object} config 配置项\n * @returns {Object} \b包含有 hide 方法，可用来关闭对话框\n */\n\nexport var confirm = methodFactory('confirm');","map":null,"metadata":{},"sourceType":"module"}