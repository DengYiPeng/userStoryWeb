{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport Button from '../button';\nimport locale from '../locale/zh-cn';\nimport { obj } from '../util';\nvar pickOthers = obj.pickOthers;\n/** Card */\n\nvar Card = (_temp = _class = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  function Card(props, context) {\n    _classCallCheck(this, Card);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.handleToggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          expand: !prevState.expand\n        };\n      });\n    };\n\n    _this._contentRefHandler = function (ref) {\n      _this.content = ref;\n    };\n\n    _this.state = {\n      needMore: false,\n      expand: false,\n      contentHeight: 'auto'\n    };\n    return _this;\n  }\n\n  Card.prototype.componentDidMount = function componentDidMount() {\n    this._setNeedMore();\n\n    this._setContentHeight();\n  };\n\n  Card.prototype.componentDidUpdate = function componentDidUpdate() {\n    this._setContentHeight();\n  }; // 是否展示 More 按钮\n\n\n  Card.prototype._setNeedMore = function _setNeedMore() {\n    var contentHeight = this.props.contentHeight;\n\n    var childrenHeight = this._getNodeChildrenHeight(this.content);\n\n    this.setState({\n      needMore: contentHeight !== 'auto' && childrenHeight > contentHeight\n    });\n  }; // 设置 Body 的高度\n\n\n  Card.prototype._setContentHeight = function _setContentHeight() {\n    if (this.state.expand) {\n      var childrenHeight = this._getNodeChildrenHeight(this.content);\n\n      this.content.style.height = childrenHeight + 'px'; // get the real height\n    } else {\n      this.content.style.height = this.props.contentHeight + 'px';\n    }\n  };\n\n  Card.prototype._getNodeChildrenHeight = function _getNodeChildrenHeight(node) {\n    if (!node) {\n      return 0;\n    }\n\n    var contentChildNodes = node.childNodes;\n    var length = contentChildNodes.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    var lastNode = contentChildNodes[length - 1];\n    return lastNode.offsetTop + lastNode.offsetHeight;\n  };\n\n  Card.prototype.render = function render() {\n    var _classNames, _classNames2;\n\n    var _props = this.props,\n        prefix = _props.prefix,\n        className = _props.className,\n        title = _props.title,\n        subTitle = _props.subTitle,\n        extra = _props.extra,\n        showTitleBullet = _props.showTitleBullet,\n        showHeadDivider = _props.showHeadDivider,\n        children = _props.children,\n        locale = _props.locale;\n    var _state = this.state,\n        needMore = _state.needMore,\n        expand = _state.expand;\n    var cardCls = classNames((_classNames = {}, _classNames[prefix + 'card'] = true, _classNames[prefix + 'card-show-divider'] = showHeadDivider, _classNames[prefix + 'card-hide-divider'] = !showHeadDivider, _classNames), className);\n    var headCls = classNames((_classNames2 = {}, _classNames2[prefix + 'card-head'] = true, _classNames2[prefix + 'card-head-show-bullet'] = showTitleBullet, _classNames2));\n    var others = pickOthers(Object.keys(Card.propTypes), this.props);\n    var headExtra = extra ? React.createElement('div', {\n      className: prefix + 'card-extra'\n    }, extra) : null;\n    return React.createElement('div', _extends({}, others, {\n      className: cardCls\n    }), title ? React.createElement('div', {\n      className: headCls\n    }, React.createElement('div', {\n      className: prefix + 'card-head-main'\n    }, React.createElement('div', {\n      className: prefix + 'card-title'\n    }, title, subTitle ? React.createElement('span', {\n      className: prefix + 'card-subtitle'\n    }, subTitle) : null), headExtra)) : null, React.createElement('div', {\n      className: prefix + 'card-body'\n    }, React.createElement('div', {\n      className: prefix + 'card-content',\n      ref: this._contentRefHandler\n    }, children), needMore ? React.createElement('div', {\n      className: prefix + 'card-footer',\n      onClick: this.handleToggle\n    }, React.createElement(Button, {\n      text: true,\n      type: 'primary'\n    }, expand ? locale.fold : locale.expand, ' ', React.createElement(Icon, {\n      type: 'arrow-down',\n      size: 'xs',\n      className: expand ? 'expand' : ''\n    }))) : null));\n  };\n\n  return Card;\n}(React.Component), _class.displayName = 'Card', _class.propTypes = {\n  prefix: PropTypes.string,\n  rtl: PropTypes.bool,\n\n  /**\n   * 卡片的标题\n   */\n  title: PropTypes.node,\n\n  /**\n   * 卡片的副标题\n   */\n  subTitle: PropTypes.node,\n\n  /**\n   * 是否显示标题的项目符号\n   */\n  showTitleBullet: PropTypes.bool,\n\n  /**\n   * 是否展示头部的分隔线\n   */\n  showHeadDivider: PropTypes.bool,\n\n  /**\n   * 内容区域的固定高度\n   */\n  contentHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * 标题区域的用户自定义内容\n   */\n  extra: PropTypes.node,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  locale: PropTypes.object\n}, _class.defaultProps = {\n  prefix: 'next-',\n  showTitleBullet: true,\n  showHeadDivider: true,\n  contentHeight: 120,\n  locale: locale.Card\n}, _temp);\nCard.displayName = 'Card';\nexport { Card as default };","map":null,"metadata":{},"sourceType":"module"}