{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ConfigProvider from '../config-provider';\n/**\n * Icon\n */\n\nvar Icon = (_temp = _class = function (_Component) {\n  _inherits(Icon, _Component);\n\n  function Icon() {\n    _classCallCheck(this, Icon);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Icon.prototype.render = function render() {\n    var _cx;\n    /* eslint-disable no-unused-vars*/\n\n\n    var _props = this.props,\n        prefix = _props.prefix,\n        type = _props.type,\n        size = _props.size,\n        className = _props.className,\n        rtl = _props.rtl,\n        other = _objectWithoutProperties(_props, ['prefix', 'type', 'size', 'className', 'rtl']);\n\n    var classes = cx((_cx = {}, _cx[prefix + 'icon'] = true, _cx[prefix + 'icon-' + type] = !!type, _cx['' + prefix + size] = !!size, _cx[className] = !!className, _cx));\n\n    if (rtl && ['arrow-left', 'arrow-right', 'arrow-double-left', 'arrow-double-right', 'switch', 'sorting', 'descending', 'ascending'].indexOf(type) !== -1) {\n      other.dir = 'rtl';\n    }\n\n    return React.createElement('i', _extends({}, other, {\n      className: classes\n    }));\n  };\n\n  return Icon;\n}(Component), _class.propTypes = {\n  prefix: PropTypes.string,\n  rtl: PropTypes.bool,\n\n  /**\n   * 指定显示哪种图标\n   */\n  type: PropTypes.string,\n\n  /**\n   * 指定图标大小\n   */\n  size: PropTypes.oneOf(['xxs', 'xs', 'small', 'medium', 'large', 'xl', 'xxl', 'xxxl']),\n  className: PropTypes.string\n}, _class.defaultProps = {\n  prefix: 'next-',\n  size: 'medium'\n}, _class._typeMark = 'icon', _temp);\nIcon.displayName = 'Icon';\nexport default ConfigProvider.config(Icon);","map":null,"metadata":{},"sourceType":"module"}