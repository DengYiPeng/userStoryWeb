{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport ListHeader from './list-header';\nimport ListFooter from './list-footer';\nimport RowComponent from './list/row';\nimport BodyComponent from './list/body';\nimport HeaderComponent from './fixed/header';\nimport WrapperComponent from './fixed/wrapper';\nimport { statics } from './util';\nexport default function list(BaseComponent) {\n  var _class, _temp;\n\n  var ListTable = (_temp = _class = function (_React$Component) {\n    _inherits(ListTable, _React$Component);\n\n    function ListTable() {\n      _classCallCheck(this, ListTable);\n\n      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n    }\n\n    ListTable.prototype.getChildContext = function getChildContext() {\n      return {\n        listHeader: this.listHeader,\n        listFooter: this.listFooter,\n        rowSelection: this.rowSelection\n      };\n    };\n\n    ListTable.prototype.normalizeDataSource = function normalizeDataSource(dataSource) {\n      var ret = [];\n\n      var loop = function loop(dataSource, level) {\n        dataSource.forEach(function (item) {\n          item.__level = level;\n          ret.push(item);\n\n          if (item.children) {\n            loop(item.children, level + 1);\n          }\n        });\n      };\n\n      loop(dataSource, 0);\n      this.ds = ret;\n      return ret;\n    };\n\n    ListTable.prototype.render = function render() {\n      var _this2 = this;\n      /* eslint-disable prefer-const */\n\n\n      var _props = this.props,\n          components = _props.components,\n          children = _props.children,\n          className = _props.className,\n          prefix = _props.prefix,\n          others = _objectWithoutProperties(_props, ['components', 'children', 'className', 'prefix']);\n\n      var isList = false,\n          ret = [];\n      Children.forEach(children, function (child) {\n        if (child) {\n          if (typeof child.type === 'function') {\n            if (child.type._typeMark === 'listHeader') {\n              _this2.listHeader = child.props;\n              isList = true;\n            } else if (child.type._typeMark === 'listFooter') {\n              _this2.listFooter = child.props;\n            } else {\n              ret.push(child);\n            }\n          } else {\n            ret.push(child);\n          }\n        }\n      });\n      this.rowSelection = this.props.rowSelection;\n\n      if (isList) {\n        var _classnames;\n\n        components = _extends({}, components);\n        components.Row = components.Row || RowComponent;\n        components.Body = components.Body || BodyComponent;\n        components.Header = components.Header || HeaderComponent;\n        components.Wrapper = components.Wrapper || WrapperComponent;\n        className = classnames((_classnames = {}, _classnames[prefix + 'table-group'] = true, _classnames[className] = className, _classnames));\n      }\n\n      return React.createElement(BaseComponent, _extends({}, others, {\n        components: components,\n        children: ret,\n        className: className,\n        prefix: prefix\n      }));\n    };\n\n    return ListTable;\n  }(React.Component), _class.ListHeader = ListHeader, _class.ListFooter = ListFooter, _class.ListRow = RowComponent, _class.ListBody = BodyComponent, _class.propTypes = _extends({}, BaseComponent.propTypes), _class.defaultProps = _extends({}, BaseComponent.defaultProps), _class.childContextTypes = {\n    listHeader: PropTypes.any,\n    listFooter: PropTypes.any,\n    rowSelection: PropTypes.object\n  }, _temp);\n  ListTable.displayName = 'ListTable';\n  statics(ListTable, BaseComponent);\n  return ListTable;\n}","map":null,"metadata":{},"sourceType":"module"}