{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { func } from '../../util';\n/**\n * slider dots\n * 导航锚点\n */\n\nvar noop = func.noop;\nvar Dots = (_temp = _class = function (_React$Component) {\n  _inherits(Dots, _React$Component);\n\n  function Dots() {\n    _classCallCheck(this, Dots);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Dots.prototype.handleChangeSlide = function handleChangeSlide(options, e) {\n    e.preventDefault();\n    this.props.changeSlide(options);\n  };\n\n  Dots.prototype.render = function render() {\n    var _props = this.props,\n        prefix = _props.prefix,\n        slideCount = _props.slideCount,\n        slidesToScroll = _props.slidesToScroll,\n        currentSlide = _props.currentSlide,\n        dotsClass = _props.dotsClass,\n        dotsDirection = _props.dotsDirection,\n        dotsRender = _props.dotsRender,\n        triggerType = _props.triggerType,\n        rtl = _props.rtl;\n    var dotsClazz = classNames(prefix + 'slick-dots', dotsDirection, dotsClass);\n    var dotCount = Math.ceil(slideCount / slidesToScroll);\n    var children = [];\n\n    for (var i = 0; i < dotCount; i++) {\n      var _handleProp;\n\n      var leftBound = i * slidesToScroll;\n      var rightBound = leftBound + slidesToScroll - 1;\n      var itemClazz = classNames(prefix + 'slick-dots-item', {\n        active: currentSlide >= leftBound && currentSlide <= rightBound\n      });\n      var dotOptions = {\n        message: 'dots',\n        index: i,\n        slidesToScroll: slidesToScroll,\n        currentSlide: currentSlide\n      }; // 除非设置为hover，默认使用click触发\n\n      var handleProp = (_handleProp = {}, _handleProp[triggerType.toLowerCase() === 'hover' ? 'onMouseEnter' : 'onClick'] = this.handleChangeSlide.bind(this, dotOptions), _handleProp);\n      var docIndex = i;\n      var currentSlideIndex = i;\n\n      if (rtl) {\n        docIndex = dotCount - 1 - i;\n        currentSlideIndex = dotCount - 1 - currentSlide;\n      }\n\n      children.push(React.createElement('li', _extends({\n        key: i,\n        className: itemClazz\n      }, handleProp), dotsRender instanceof Function ? React.createElement('span', null, dotsRender(docIndex, currentSlideIndex)) : React.createElement('button', null)));\n    }\n\n    return React.createElement('ul', {\n      className: dotsClazz\n    }, children);\n  };\n\n  return Dots;\n}(React.Component), _class.propTypes = {\n  prefix: PropTypes.string,\n  currentSlide: PropTypes.number,\n  changeSlide: PropTypes.func,\n  dotsClass: PropTypes.string,\n  slideCount: PropTypes.number,\n  slidesToScroll: PropTypes.number,\n  dotsDirection: PropTypes.oneOf(['hoz', 'ver']),\n  dotsRender: PropTypes.func,\n  triggerType: PropTypes.string\n}, _class.defaultProps = {\n  changeSlide: noop\n}, _temp);\nDots.displayName = 'Dots';\nexport { Dots as default };","map":null,"metadata":{},"sourceType":"module"}